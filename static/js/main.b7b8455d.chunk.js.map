{"version":3,"sources":["helpers/fretsToNotes.js","helpers/fretboardPoints.js","helpers/pitches.js","helpers/fretboardHitpoints.js","components/fretboardMastery/Canvas.js","components/fretboardMastery/Counter.js","components/fretboardMastery/InfoBar.js","components/fretboardMastery/Results.js","pages/FretboardMastery.js","helpers/scales/constants.js","helpers/scales/scales.js","helpers/drawFunctions/drawFunctions.js","helpers/constants.js","helpers/tone/playFunctions.js","components/intervalMastery/Canvas.js","components/intervalMastery/InfoBar.js","pages/IntervalMastery.js","components/scalesMastery/Canvas.js","components/scalesMastery/InfoBar.js","components/Button.js","components/scalesMastery/ScaleSelects.js","pages/ScalesMastery.js","helpers/fretsToNearestRoot.js","components/earTraining/Canvas.js","components/earTraining/InfoBar.js","components/earTraining/ScaleDegrees.js","components/earTraining/Judgement.js","components/earTraining/state/reducer.js","pages/EarTraining.js","components/caged/Canvas.js","components/caged/InfoBar.js","pages/Caged.js","components/NavBar.js","pages/Home.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["notes","strings","firstNoteIndexes","fretsToNotes","a","length","b","fretboardPoints","stringIndex","nthFret","x","y","FRETS_TO_PITCHES","PITCHES_TO_FRETS","key","push","inWhichFret","stringY","fret","fP","FRET_WIDTH","onMouseDownCoordinates","event","canvasRef","clientX","current","getBoundingClientRect","left","clientY","top","STRINGS","synth","Tone","attackNoise","release","dampening","resonance","toDestination","Canvas","useState","activeString","setActiveString","useRef","fretboardRef","useContext","FretboardMasteryCtx","state","dispatch","useEffect","ctx","getContext","fretboard","Image","src","onload","drawImage","gameFinished","drawActiveString","Math","floor","random","string","beginPath","moveTo","fillStyle","lineWidth","lineTo","stroke","ref","width","height","onMouseDown","e","triggerAttackRelease","note","bgColor","color","arc","PI","fill","font","textAlign","fillText","drawNote","noteToQuess","type","ms","setTimeout","drawBackgroundWithDelay","Counter","GAME_DURATION","counter","setCounter","interval","counterRef","handleKeyUp","keyCode","clearInterval","setInterval","prevCounter","document","addEventListener","removeEventListener","className","InfoBar","role","aria-label","Results","points","style","createContext","initialState","userQuess","reducer","action","newNote","FretboardMastery","useReducer","Provider","value","NOTES","NOTESOBJ","MAJOR_SCALE","MINOR_SCALE","CHROMATIC_SCALE","MAJOR_PENTATONIC_SCALE","MINOR_PENTATONIC_SCALE","DORIAN","PHRYGIAN","LYDIAN","MIXOLYDIAN","LOCRIAN","MAJOR_BLUES","MINOR_BLUES","SCALE_DEGREES","MAJOR_TRIAD","MINOR_TRIAD","triad","getScaleIntervals","scaleName","getScaleNotes","scaleIntervals","currentIndex","map","scaleDegreeFromANote","halfNoteDifference","stringToANumber","imageRef","drawSequenceOfFrets","frets","timeBetween","index","scaleDegree","initializeFretboard","cb","drawScale","scale","showNotes","highlighted","blank","betweenFrets","betweenStrings","halfNotes","i","getHalfNotes","draw","isBetweenFrets","fretNum","substring","parseInt","isBetweenStrings","drawnFrets","includes","polySynth","playNote","playSequenceOfNotes","timeBetweenNotes","time","currentTime","toFixed","parseFloat","IntervalMastery","ScalesContext","onChange","checked","payload","checkedIcon","uncheckedIcon","Button","children","handleClick","active","onClick","ScaleSelects","handleScaleChange","ScalesMastery","connect","onSlide","start","end","range","min","max","orientation","fretsToNearestRoot","degree","fretsDrawn","previousDegree","currentDegree","degreeNumber","findIndex","f","duplicates","setRef","EarTrainingCtx","answerIsAMatch","pushedFret","randomFret","target","activeElement","blur","defaultValue","ScaleDegrees","toString","paddingLeft","cursor","disabled","Judgement","answerWasCorrect","otherProps","scaleNotes","disableRestart","stateRef","trackFirstRenderRef","quessMade","setQuessMade","setDisableRestart","restartRef","handleKeyup","rootFret","rootPitch","rootNote","intervals","playChord","root","triadArray","rootNumber","rootIndex","triadPitchesFromRoot","getRandomFret","randomNote","cRef","fRef","pips","mode","values","density","stepped","initializeMic","analyser","open","then","console","log","getValue","catch","withRouter","location","pathname","to","Home","alt","textDecoration","Footer","App","path","component","EarTraining","Caged","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"uOAyBA,I,kFAxBaA,EAAQ,CACnB,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,KAIIC,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KACpCC,EAAmB,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,GAKrCC,EAAe,GAEZC,EAAI,EAAGA,EAAIH,EAAQI,OAAQD,IAClC,IAAK,IAAIE,EAAI,EAAGA,GAAK,GAAIA,IACvBH,EAAa,GAAD,OAAIF,EAAQG,IAAZ,OAAiBE,IAAON,GAAOE,EAAiBE,GAAKE,EAAI,GAAK,ICI9E,IA9BO,IAYDL,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAMpCM,EAAkB,GAYfC,EAAc,EAAGA,EAAcP,EAAQI,OAAQG,IACtD,IAAK,IAAIC,EAAU,EAAGA,GAAW,GAAIA,IACnCF,EAAgB,GAAD,OAAIN,EAAQO,IAAZ,OAA2BC,IAAa,CACrDC,EAAGD,EAAU,EAAIF,EAAgB,GAAD,OAAIN,EAAQO,IAAZ,OAA2BC,EAAU,IAAKC,EAjCtD,GAUN,GAwBdC,EA/BuB,IAFF,GAiCFH,G,YClCZI,EAAmB,CAC9B,GAAM,KACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,KACN,GAAM,MACN,IAAO,KACP,IAAO,MACP,IAAO,KAEP,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,KACN,GAAM,MACN,IAAO,KACP,IAAO,MACP,IAAO,KAEP,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,IAAO,KACP,IAAO,MACP,IAAO,KAEP,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,IAAO,KACP,IAAO,MACP,IAAO,KAEP,GAAM,KACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,MACN,IAAO,KACP,IAAO,MACP,IAAO,KAEP,GAAM,KACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,MACN,GAAM,KACN,GAAM,KACN,GAAM,MACN,IAAO,KACP,IAAO,MACP,IAAO,MAGHC,EAAmB,GAEzB,IAAK,IAAIC,KAAOF,EACTC,EAAiBD,EAAiBE,IAIrCD,EAAiBD,EAAiBE,IAAMC,KAAKD,GAH7CD,EAAiBD,EAAiBE,IAAQ,CAACA,GCzF/C,IAGaE,EAAc,SAACN,EAAGC,EAAGM,GAEhC,IAAK,IAAMC,KAAQC,EACjB,KAAKF,GAAYE,EAAGD,GAAMP,EAAIM,EANjB,IAMuCE,EAAGD,GAAMP,EAAIM,EANpD,KAOPE,EAAGD,GAAMR,EAAKA,EAAIU,MAAmBD,EAAGD,GAAMR,EAAKA,EAAIU,MACrDD,EAAGD,GAAMP,EAAKA,EART,IAQ0BQ,EAAGD,GAAMP,EAAKA,EARxC,GASP,OAAOO,EAKf,OAAO,GAGIG,EAAyB,SAACC,EAAOC,GAK5C,MAAO,CAHGD,EAAME,QAAUD,EAAUE,QAAQC,wBAAwBC,KAC1DL,EAAMM,QAAUL,EAAUE,QAAQC,wBAAwBG,MCLhEC,EAAU,CHba,IACA,IACA,IACA,GACA,GACA,IGqBvBC,EAAQ,IAAIC,IAAgB,CAChCC,YAAa,EACbC,QAAS,EACTC,UAAW,IACXC,UAAW,MACVC,gBAGY,SAASC,IAAU,IAAD,EAESC,qBAFT,mBAExBC,EAFwB,KAEVC,EAFU,KAIzBlB,EAAYmB,mBACZC,EAAeD,mBALU,EAOLE,qBAAWC,GAPN,mBAOxBC,EAPwB,KAOjBC,EAPiB,KAS/BC,qBAAU,WACR,IACMC,EADS1B,EAAUE,QACNyB,WAAW,MAExBC,EAAY,IAAIC,MACtBT,EAAalB,QAAU0B,EACvBA,EAAUE,IAAM,iCAEhBF,EAAUG,OAAS,WACjBL,EAAIM,UAAUJ,EAAW,EAAG,MAE7B,IAEHH,qBAAU,WACHF,EAAMU,eACGjC,EAAUE,QAAQyB,WAAW,MACrCK,UAAUZ,EAAalB,QAAS,EAAG,GACvCgC,OAED,CAACX,EAAMU,eAIV,IAgDMC,EAAmB,WACvB,IAAMjD,EAAckD,KAAKC,MAAMD,KAAKE,SAAW9B,EAAQzB,QACjDwD,EAAS/B,EAAQtB,GACvBiC,EAAgBoB,GAChB,IAAMZ,EAAM1B,EAAUE,QAAQyB,WAAW,MAEzCD,EAAIa,YACJb,EAAIc,OAlG6B,GAkGQF,GACzCZ,EAAIe,UAAY,MAChBf,EAAIgB,UAAY,EAEhBhB,EAAIiB,OArG2B,IAqGQL,GACvCZ,EAAIkB,UAGN,OACE,6BACE,4BACEC,IAAK7C,EACL8C,MAAO,IACPC,OAAQ,IACRC,YAlDkB,SAAAC,GAGtB,IAAI1B,EAAMU,aAAV,CAGA,IACMP,EADS1B,EAAUE,QACNyB,WAAW,MAExBxC,EAAI8D,EAAEhD,QAAUD,EAAUE,QAAQC,wBAAwBC,KAC1DhB,EAAI6D,EAAE5C,QAAUL,EAAUE,QAAQC,wBAAwBG,IAE1DX,EAAOF,EAAYN,EAAGC,EAAG6B,GAE3BtB,IAGFa,EAAM0C,qBAAqB7D,EAAiBM,GAAO,MA7BtC,SAAC+B,EAAKvC,EAAGC,EAAG+D,EAAMC,EAASC,GAC1C3B,EAAIa,YACJb,EAAI4B,IAAInE,EAAGC,EAAG,GAAI,EAAG,EAAI+C,KAAKoB,IAC9B7B,EAAIe,UAAYW,EAChB1B,EAAI8B,OACJ9B,EAAI+B,KAAO,aACX/B,EAAIe,UAAYY,EAChB3B,EAAIgC,UAAY,SAChBhC,EAAIiC,SAASR,EAAMhE,EAAGC,EA3DO,GA4D7BsC,EAAIkB,SAqBFgB,CAASlC,EAAK1C,EAAgBW,GAAMR,EAAGH,EAAgBW,GAAMP,EAAGR,EAAae,GAAO,QAAS,SAEzFf,EAAae,KAAU4B,EAAMsC,aAC/BrC,EAAS,CAAEsC,KAAM,cAEnBtC,EAAS,CAAEsC,KAAM,aA1CW,SAACpC,EAAKqC,GACpCC,YAAW,WACTtC,EAAIM,UAAUZ,EAAalB,QAAS,EAAG,GACvCgC,MACC6B,GAwCDE,CAAwBvC,EAAK,W,OC5GpB,SAASwC,IAAW,IAAD,EAEFlD,mBAASmD,IAFP,mBAEzBC,EAFyB,KAEhBC,EAFgB,OAGXhD,qBAAWC,GAAvBE,EAHuB,oBAK1B8C,EAAWnD,iBAAO,MAClBoD,EAAapD,iBAAOiD,GAE1B3C,qBAAU,WAER,IAAM+C,EAAc,SAAAvB,GACA,KAAdA,EAAEwB,UAIuB,IAAvBF,EAAWrE,SAAiBoE,EAASpE,SACvCwE,cAAcJ,EAASpE,SACvBmE,EAAWF,IAEXG,EAASpE,QAAUyE,aAAY,WAC7BN,GAAW,SAAAO,GAAW,OAAIA,EAAc,OACvC,MAKIN,EAASpE,SAEhBwE,cAAcJ,EAASpE,SACvBoE,EAASpE,QAAU,KACnBsB,EAAS,CAAEsC,KAAM,kBAMjBQ,EAASpE,QAAUyE,aAAY,WAC7BN,GAAW,SAAAO,GAAW,OAAIA,EAAc,OACvC,KAEHP,EAAWF,OAOjB,OAFAU,SAASC,iBAAiB,QAASN,GAE5B,WACLE,cAAcJ,EAASpE,SACvB2E,SAASE,oBAAoB,QAASP,MAGvC,IAEH/C,qBAAU,WAGR8C,EAAWrE,QAAUkE,EA3DH,KA6DdA,IACF5C,EAAS,CAAEsC,KAAM,eACjBtC,EAAS,CAAEsC,KAAM,cAGH,IAAZM,IACFM,cAAcJ,EAASpE,SACvBsB,EAAS,CAAEsC,KAAM,mBAElB,CAACM,EAAS5C,IAYb,OACE,yBAAKwD,UAAU,eACb,4BATKZ,GA3EW,GA6EhB,wCAAcA,GAEd,0BAAMY,UAAU,4CAA4CV,EAASpE,SAAWkE,EA/EhE,MCAP,SAASa,IACtB,OACE,yBAAKD,UAAU,kBACb,wBAAIA,UAAU,eAAd,qBACA,uBAAGA,UAAU,kBAAb,yFAGA,uBAAGA,UAAU,kBAAb,gJAMA,uBAAGA,UAAU,kBAAb,SACQ,yCADR,yBAGA,uBAAGA,UAAU,kBAAb,iBACgB,0BAAME,KAAK,MAAMC,aAAW,aAA5B,iBAEhB,kBAACjB,EAAD,OCpBS,SAASkB,IAAW,IAAD,EAEhB/D,qBAAWC,GAApBC,EAFyB,oBAIhC,OACE,yBAAKyD,UAAU,4BACb,yBAAKA,UAAU,0CACb,yBAAKA,UAAS,4CAAuCzD,EAAMU,aAAe,aAAe,gBAAkBV,EAAMsC,aACjH,wBAAImB,UAAU,cAAczD,EAAM8D,OAAlC,YAGF,yBAAKL,UAAU,0BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,0BAAMA,UAAU,yCAAyCM,MAAO,CAAExC,MAAO,SAAzE,SACA,kFAGJ,yBAAKkC,UAAU,OACb,yBAAKA,UAAU,OACb,0BAAMA,UAAU,yCAAyCM,MAAO,CAAExC,MAAO,SAAzE,WACA,2FAGJ,yBAAKkC,UAAU,OACb,yBAAKA,UAAU,OACb,0BAAMA,UAAU,yCAAyCM,MAAO,CAAExC,MAAO,SAAzE,WACA,wEAGJ,yBAAKkC,UAAU,OACb,yBAAKA,UAAU,OACb,0BAAMA,UAAU,yCAAyCM,MAAO,CAAExC,MAAO,SAAzE,UACA,2EAGJ,yBAAKkC,UAAU,OACb,yBAAKA,UAAU,OACb,0BAAMA,UAAU,yCAAyCM,MAAO,CAAExC,MAAO,SAAzE,SACA,qEClCL,IAAMxB,EAAsBiE,0BAE7BC,EAAe,CACnBvD,cAAc,EACdoD,OAAQ,EACRxB,YAAa,IACb4B,UAAW,IAGPC,EAAU,SAACnE,EAAOoE,GACtB,OAAQA,EAAO7B,MACb,IAAK,cACH,OAAO,eACFvC,EADL,CAEEU,cAAc,IAElB,IAAK,aACH,OAAO,eACFV,EADL,CAEEU,cAAc,EACdoD,OAAQ,IAEZ,IAAK,WAGH,IAFA,IAAIO,EAAUnH,EAAM0D,KAAKC,MAAMD,KAAKE,SAAW5D,EAAMK,SAE9C8G,IAAYrE,EAAMsC,aACvB+B,EAAUnH,EAAM0D,KAAKC,MAAMD,KAAKE,SAAW5D,EAAMK,SAGnD,OAAO,eACFyC,EADL,CAEEsC,YAAa+B,IAEjB,IAAK,YACH,OAAO,eACFrE,EADL,CAEE8D,OAAQ9D,EAAM8D,OAAS,IAE3B,QACE,OAAO9D,IAuBEsE,MAnBf,WAA6B,IAAD,EAEAC,qBAAWJ,EAASF,GAFpB,mBAEnBjE,EAFmB,KAEZC,EAFY,KAI1B,OACE,6BACE,kBAACF,EAAoByE,SAArB,CAA8BC,MAAO,CAACzE,EAAOC,IAC3C,yBAAKwD,UAAU,2CACb,6BACE,kBAACjE,EAAD,MACA,kBAACqE,EAAD,OAEF,kBAACH,EAAD,U,QC/DGgB,EAAQ,CACnB,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,KAGWC,EAAW,CACtB,EAAK,EACL,KAAM,EACN,EAAK,EACL,KAAM,EACN,EAAK,EACL,EAAK,EACL,KAAM,EACN,EAAK,EACL,KAAM,EACN,EAAK,EACL,KAAM,GACN,EAAK,IAGMC,EAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjCC,EAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjCC,EAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACpDC,EAAyB,CAAC,EAAG,EAAG,EAAG,EAAG,GACtCC,EAAyB,CAAC,EAAG,EAAG,EAAG,EAAG,GACtCC,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5BC,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9BC,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5BC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCC,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7BC,EAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9BC,EAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAE9BC,EAAgB,CAAC,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAE7EC,EAAc,CAAC,IAAK,IAAK,KACzBC,EAAc,CAAC,IAAK,KAAM,KCzB5BC,EAAQ,GAGNC,GAAoB,SAAAC,GAC/B,OAAQA,GACN,IAAK,mBAEH,OADAF,EAAQD,EACDV,EAET,IAAK,mBAEH,OADAW,EAAQF,EACDV,EAET,IAAK,cAEH,OADAY,EAAQF,EACDb,EAET,IAAK,kBACH,OAAOE,EAET,IAAK,cAEH,OADAa,EAAQD,EACDb,EAET,IAAK,SAEH,OADAc,EAAQD,EACDT,EAET,IAAK,WAEH,OADAU,EAAQD,EACDR,EAET,IAAK,SAEH,OADAS,EAAQF,EACDN,EAET,IAAK,aAEH,OADAQ,EAAQF,EACDL,EAET,IAAK,UAEH,OADAO,EAAQD,EACDL,EAET,IAAK,cAEH,OADAM,EAAQF,EACDH,EAET,IAAK,cAEH,OADAK,EAAQD,EACDH,EAET,QAEE,OADAI,EAAQD,EACDb,IAMAiB,GAAgB,SAAC9H,EAAK+H,GACjC,IAAIC,EAAerB,EAAS3G,GAO5B,OALc+H,EAAeE,KAAI,SAAAlD,GAE/B,OAAO2B,EADPsB,EAAeA,EAAejD,EAAW,GAAKiD,EAAejD,EAAWiD,EAAejD,EAAW,QAgEzFmD,GAAuB,SAAClI,EAAK4D,GAExC,IAAMuE,EAAqBxB,EAAS3G,IAAQ2G,EAAS/C,GAAQ+C,EAAS/C,GAAQ+C,EAAS3G,GAAO,GAAK2G,EAAS3G,GAAO2G,EAAS/C,GAE5H,OAAOuE,EAAqBX,EAAcW,EAAqB,GAAK,KCjJhEC,GAAkB,CAAE,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,GAE1D1D,GAA0B,SAACvC,EAAKkG,EAAU7D,GACrDC,YAAW,WACTtC,EAAIM,UAAU4F,EAAS1H,QAAS,EAAG,KAClC6D,IASQ8D,GAAsB,SAACnG,EAAKnC,EAAKuI,EAAOC,GACnD,IAAIC,EAAQ,EAEZ,GAAKF,EAAMhJ,OAGX,IAAMwF,EAAWK,aAAY,WAC3B,IAAMsD,EAAcR,GAAqBlI,EAAKX,EAAakJ,EAAME,KAEjEpE,GAASlC,EAAKoG,EAAME,GAAwB,MAAhBC,EAAsB,IAAMA,EAAa,OAAQ,SACzED,IAAUF,EAAMhJ,OAAS,GAC3B4F,cAAcJ,GAEhB0D,MACCD,IAGQnE,GAAW,SAAClC,EAAK/B,EAAMwD,GAA8C,IAAxCC,EAAuC,uDAA7B,QAASC,EAAoB,uDAAZ,QAC7DlE,EAAIH,EAAgBW,GAAMR,EAC1BC,EAAIJ,EAAgBW,GAAMP,EAEhCsC,EAAIa,YACJb,EAAI4B,IAAInE,EAAGC,EAAG,GAAI,EAAG,EAAI+C,KAAKoB,IAC9B7B,EAAIe,UAAYW,EAChB1B,EAAI8B,OACJ9B,EAAI+B,KAAO,aACX/B,EAAIe,UAAYY,EAChB3B,EAAIgC,UAAY,SAChBhC,EAAIiC,SAASR,EAAMhE,EAAGC,EChCgB,GDiCtCsC,EAAIkB,UAkBOsF,GAAsB,SAAClI,EAAWoB,EAAc+G,GAE3D,IAAMzG,EAAM1B,EAAUE,QAAQyB,WAAW,MAEnCC,EAAY,IAAIC,MACtBT,EAAalB,QAAU0B,EACvBA,EAAUE,IAAM,iCAEhBF,EAAUG,OAAS,WACjBL,EAAIM,UAAUJ,EAAW,EAAG,GACxBuG,GACFA,MAIOC,GAAY,SAACpI,EAAWqI,EAAO9I,EAAK+I,EAAWC,EAAaC,EAAOC,EAAcC,GAC5F,IAAMhH,EAAM1B,EAAUE,QAAQyB,WAAW,MAGnC2F,EAAiBH,GAAkBkB,GAGnC5J,EAAQ4I,GAAc9H,EAAK+H,GAG3BqB,ED+DoB,SAACrB,EAAgB7I,GAG3C,IAFA,IAAMkK,EAAY,GAETC,EAAI,EAAGA,EAAItB,EAAexI,OAAQ8J,IAEvCD,EAAUlK,EAAMmK,IADR,IAANA,EACoBtB,EAAesB,GAEftB,EAAesB,GAAKD,EAAUlK,EAAMmK,EAAI,IAGlE,OAAOD,ECzEWE,CAAavB,EAAgB7I,GAK/C,OAAOqK,GAAKpH,EAAKnC,EAAKoJ,EAAWlK,EAAO6J,EAAWC,EAAaC,EAAOC,EAAcC,IAIjFK,GAAiB,SAACpJ,EAAM8I,GAC5B,IAAMO,EAAUrJ,EAAKsJ,UAAU,GAE/B,QAAIC,SAASF,GAAWP,EAAa,IAAMS,SAASF,GAAWP,EAAa,KAMxEU,GAAmB,SAACxJ,EAAM+I,GAC9B,IAAMpG,EAAS3C,EAAKsJ,UAAU,EAAG,GAEjC,QAAItB,GAAgBrF,GAAUoG,EAAe,IAAMf,GAAgBrF,GAAUoG,EAAe,KAOxFI,GAAO,SAACpH,EAAKnC,EAAKoJ,EAAWlK,EAAO6J,EAAWC,EAAaC,GAA4D,IAArDC,EAAoD,uDAArC,CAAC,EAAG,IAAKC,EAA4B,uDAAX,CAAC,EAAG,GAE9GU,EAAa,GAEnB,IAAK,IAAMzJ,KAAQX,EAGjB,GAAK+J,GAAepJ,EAAM8I,IAGrBU,GAAiBxJ,EAAM+I,GAA5B,CAGA,IAAMvF,EAAOvE,EAAae,GACpBsI,EAAclB,EAAc4B,EAAUxF,GAAQ,GAGhD1E,EAAM4K,SAASlG,KAEjBiG,EAAW5J,KAAKG,GAGZwD,IAAS5D,EAETqE,GAASlC,EAAK/B,EADZ2I,EACkBnF,EAEA,IAFM,MAAO,SAK5BqF,EACP5E,GAASlC,EAAK/B,EAAM,GAAI,QAAS,SAI1BuH,EAAMmC,SAASpB,GAClBK,EACEC,EACF3E,GAASlC,EAAK/B,EAAMwD,EAAM,OAAQ,SAElCS,GAASlC,EAAK/B,EAAMwD,GAGlBoF,EACF3E,GAASlC,EAAK/B,EAAMsI,EAAa,OAAQ,SAEzCrE,GAASlC,EAAK/B,EAAMsI,GAKpBK,EACEC,EACF3E,GAASlC,EAAK/B,EAAMwD,EAAM,QAAS,SAGnCS,GAASlC,EAAK/B,EAAMwD,GAGlBoF,EACF3E,GAASlC,EAAK/B,EAAMsI,EAAa,QAAS,SAE1CrE,GAASlC,EAAK/B,EAAMsI,IAI9B,OAAOmB,GEvLH5I,GAAQ,IAAIC,IAAgB,CAChCC,YAAa,EACbC,QAAS,EACTC,UAAW,IACXC,UAAW,MACVC,gBAEGwI,IAAY,IAAI7I,KAAiBK,gBAE1ByI,GAAW,SAACpG,EAAMrE,GAI7B0B,GAAM0C,qBAAqBC,EAAMrE,IAQtB0K,GAAsB,SAAC1B,EAAO2B,GAGzC,IAH8D,EAGxDC,EAAOjJ,IAAakJ,YAAYC,QAAQ,GAE1C5B,EAAQ,EALkD,cAM3CF,GAN2C,IAM9D,2BAA0B,CAAC,IAAhBnI,EAAe,QACxBa,GAAM0C,qBAAqB7D,EAAiBM,GAAO,KAAMkK,WAAWH,GAAQ1B,EAAQyB,GACpFzB,KAR4D,gCCjBjD,SAASjH,KAEtB,IAAMf,EAAYmB,mBACZC,EAAeD,mBAErBM,qBAAU,WACRyG,GAAoBlI,EAAWoB,KAC9B,IAiBH,OACE,6BACE,4BACEyB,IAAK7C,EACL8C,MAAO,IACPC,OAAQ,IACRC,YAnBkB,SAAAC,GAEtB,IAAMvB,EAAM1B,EAAUE,QAAQyB,WAAW,MAFd,EAGZ7B,EAAuBmD,EAAGjD,GAHd,mBAGpBb,EAHoB,KAGjBC,EAHiB,KAIrBO,EAAOF,EAAYN,EAAGC,GAExBO,IACF4J,GAASlK,EAAiBM,GAAO,MACjCiE,GAASlC,EAAK/B,EAAMf,EAAae,IACjCsE,GAAwBvC,EAAKN,EAAc,UCxBlC,SAAS6D,KACtB,OACE,yBAAKD,UAAU,kBACb,wBAAIA,UAAU,eAAd,oBACA,uBAAGA,UAAU,kBAAb,yFAGA,uBAAGA,UAAU,kBAAb,iFCPS,SAAS8E,KACtB,OACE,6BACE,yBAAK9E,UAAU,2CACb,6BACE,kBAAC,GAAD,OAEF,kBAAC,GAAD,QCLO,SAASjE,KAAU,IAAD,EAGfM,qBAAW0I,IAApBxI,EAHwB,oBAKzBvB,EAAYmB,mBACZC,EAAeD,mBAqBrB,OAnBAM,qBAAU,WACRyG,GAAoBlI,EAAWoB,GAAc,kBAAMgH,GAAUpI,EAAWuB,EAAM8G,MAAO9G,EAAMhC,IAAKgC,EAAM+G,UAAW/G,EAAMgH,aAAa,EAAOhH,EAAMkH,aAAclH,EAAMmH,qBACpK,CAACnH,EAAMhC,IAAKgC,EAAM8G,MAAO9G,EAAM+G,UAAW/G,EAAMgH,YAAahH,EAAMkH,aAAclH,EAAMmH,iBAkBxF,6BACE,4BACE7F,IAAK7C,EACL8C,MAAO,IACPC,OAAQ,O,yBC/BD,SAASkC,KAAW,IAAD,EAEN5D,qBAAW0I,IAFL,mBAEzBxI,EAFyB,KAElBC,EAFkB,KAahC,OACE,yBAAKwD,UAAU,kBACb,wBAAIA,UAAU,eAAd,kBACA,uBAAGA,UAAU,kBAAb,oLAKA,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,mBACf,0BAAMA,UAAU,2BAAhB,iBACA,kBAAC,KAAD,CACEgF,SArBW,SAAAC,GACnBzI,EAAS,CAAEsC,KAAM,qCAAsCoG,QAASD,KAqBxDA,QAAS1I,EAAM+G,UACf6B,aAAa,EACbC,eAAe,EACfpF,UAAU,mBAEZ,0BAAMA,UAAU,2BAAhB,WAIJ,yBAAKA,UAAU,kBAAf,mMAMA,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,mBACf,0BAAMA,UAAU,2BAAhB,eACA,kBAAC,KAAD,CACEgF,SArCgB,SAAAC,GACxBzI,EAAS,CAAEsC,KAAM,YAAaoG,QAASD,KAqC/BA,QAAS1I,EAAMgH,YACf4B,aAAa,EACbC,eAAe,EACfpF,UAAU,mBAEZ,0BAAMA,UAAU,2BAAhB,iBAIF,yBAAKA,UAAU,aAAf,oGC5DO,SAASqF,GAAT,GAA2D,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,OAAQ1H,EAAS,EAATA,MAC9D,OACE,4BAAQkC,UAAS,cAASwF,EAAS,cAAgB,gBAAlC,QAAyDlF,MAAO,CAAExC,SAAS2H,QAASF,GAClGD,GCCQ,SAASI,KAAgB,IAAD,EAEXrJ,qBAAW0I,IAFA,mBAE9BxI,EAF8B,KAEvBC,EAFuB,KAI/B+I,EAAc,SAAAhL,GAClBiC,EAAS,CAAEsC,KAAM,UAAWoG,QAAS3K,KAGjCoL,EAAoB,SAAAtC,GACxB7G,EAAS,CAAEsC,KAAM,YAAaoG,QAAS7B,KAIzC,OACE,yBAAKrD,UAAU,oDAEb,6BACE,wBAAIA,UAAU,kCAAd,OACA,yBAAKA,UAAU,OACb,kBAACqF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,OAAO0H,OAAsB,MAAdjJ,EAAMhC,IAAagL,YAAa,kBAAMA,EAAY,OAA/F,KACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,OAAO0H,OAAsB,OAAdjJ,EAAMhC,IAAcgL,YAAa,kBAAMA,EAAY,QAAhG,MACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,OAAO0H,OAAsB,MAAdjJ,EAAMhC,IAAagL,YAAa,kBAAMA,EAAY,OAA/F,MAGF,yBAAKvF,UAAU,OACb,kBAACqF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,OAAO0H,OAAsB,OAAdjJ,EAAMhC,IAAcgL,YAAa,kBAAMA,EAAY,QAAhG,MACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,OAAO0H,OAAsB,MAAdjJ,EAAMhC,IAAagL,YAAa,kBAAMA,EAAY,OAA/F,KACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,OAAO0H,OAAsB,MAAdjJ,EAAMhC,IAAagL,YAAa,kBAAMA,EAAY,OAA/F,MAGF,yBAAKvF,UAAU,OACb,kBAACqF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,OAAO0H,OAAsB,OAAdjJ,EAAMhC,IAAcgL,YAAa,kBAAMA,EAAY,QAAhG,MACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,OAAO0H,OAAsB,MAAdjJ,EAAMhC,IAAagL,YAAa,kBAAMA,EAAY,OAA/F,KACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,OAAO0H,OAAsB,OAAdjJ,EAAMhC,IAAcgL,YAAa,kBAAMA,EAAY,QAAhG,OAGF,yBAAKvF,UAAU,OACb,kBAACqF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,OAAO0H,OAAsB,MAAdjJ,EAAMhC,IAAagL,YAAa,kBAAMA,EAAY,OAA/F,KACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,OAAO0H,OAAsB,OAAdjJ,EAAMhC,IAAcgL,YAAa,kBAAMA,EAAY,QAAhG,MACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,OAAO0H,OAAsB,MAAdjJ,EAAMhC,IAAagL,YAAa,kBAAMA,EAAY,OAA/F,OAIJ,6BACE,wBAAIvF,UAAU,kCAAd,SACA,yBAAKA,UAAU,OACb,kBAACqF,GAAD,CAAQrF,UAAU,MAAMwF,OAAwB,gBAAhBjJ,EAAM8G,MAAyBkC,YAAa,kBAAMI,EAAkB,iBAApG,SACA,kBAACN,GAAD,CAAQrF,UAAU,MAAMwF,OAAwB,gBAAhBjJ,EAAM8G,MAAyBkC,YAAa,kBAAMI,EAAkB,iBAApG,SACA,kBAACN,GAAD,CAAQrF,UAAU,MAAMwF,OAAwB,qBAAhBjJ,EAAM8G,MAA8BkC,YAAa,kBAAMI,EAAkB,sBAAzG,mBAEF,yBAAK3F,UAAU,OACb,kBAACqF,GAAD,CAAQrF,UAAU,MAAMwF,OAAwB,qBAAhBjJ,EAAM8G,MAA8BkC,YAAa,kBAAMI,EAAkB,sBAAzG,kBACA,kBAACN,GAAD,CAAQrF,UAAU,MAAMwF,OAAwB,WAAhBjJ,EAAM8G,MAAoBkC,YAAa,kBAAMI,EAAkB,YAA/F,UACA,kBAACN,GAAD,CAAQrF,UAAU,MAAMwF,OAAwB,aAAhBjJ,EAAM8G,MAAsBkC,YAAa,kBAAMI,EAAkB,cAAjG,aAEF,yBAAK3F,UAAU,OACb,kBAACqF,GAAD,CAAQrF,UAAU,MAAMwF,OAAwB,WAAhBjJ,EAAM8G,MAAoBkC,YAAa,kBAAMI,EAAkB,YAA/F,UACA,kBAACN,GAAD,CAAQrF,UAAU,MAAMwF,OAAwB,eAAhBjJ,EAAM8G,MAAwBkC,YAAa,kBAAMI,EAAkB,gBAAnG,cACA,kBAACN,GAAD,CAAQrF,UAAU,MAAMwF,OAAwB,YAAhBjJ,EAAM8G,MAAqBkC,YAAa,kBAAMI,EAAkB,aAAhG,YAEF,yBAAK3F,UAAU,OACb,kBAACqF,GAAD,CAAQrF,UAAU,MAAMwF,OAAwB,gBAAhBjJ,EAAM8G,MAAyBkC,YAAa,kBAAMI,EAAkB,iBAApG,eACA,kBAACN,GAAD,CAAQrF,UAAU,MAAMwF,OAAwB,gBAAhBjJ,EAAM8G,MAAyBkC,YAAa,kBAAMI,EAAkB,iBAApG,kB,aC9DJnF,GAAe,CACnB6C,MAAO,cACP9I,IAAK,IACL+I,WAAW,EACXC,aAAa,EACbE,aAAc,CAAC,EAAG,IAClBC,eAAgB,CAAC,EAAG,IAGhBhD,GAAU,SAACnE,EAAOoE,GACtB,OAAQA,EAAO7B,MACb,IAAK,UACH,OAAO,eACFvC,EADL,CAEEhC,IAAKoG,EAAOuE,UAGhB,IAAK,YACH,OAAO,eACF3I,EADL,CAEE8G,MAAO1C,EAAOuE,UAGlB,IAAK,qCACH,OAAO,eACF3I,EADL,CAEE+G,UAAW3C,EAAOuE,UAEtB,IAAK,YACH,OAAO,eACF3I,EADL,CAEEgH,YAAa5C,EAAOuE,UAGxB,IAAK,oBACH,OAAO,eACF3I,EADL,CAEEkH,aAAc9C,EAAOuE,UAGzB,IAAK,sBACH,OAAO,eACF3I,EADL,CAEEmH,eAAgB/C,EAAOuE,UAG3B,QACE,OAAO3I,IAIAwI,GAAgBxE,0BAEd,SAASqF,KAAiB,IAAD,EAEZ9E,qBAAWJ,GAASF,IAFR,mBAE/BjE,EAF+B,KAExBC,EAFwB,KAmBtC,OACE,6BACE,kBAACuI,GAAchE,SAAf,CAAwBC,MAAO,CAACzE,EAAOC,IAErC,yBAAKwD,UAAU,2CACb,6BACE,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,mBACb,kBAAC,GAAD,MACA,kBAAC,KAAD,CAEEA,UAAU,YACV6F,SAAO,EACPC,QArBU,SAAA7H,GAExB,IAAM8H,EAAQ7B,SAASjG,EAAE,IACnB+H,EAAM9B,SAASjG,EAAE,IAEvBzB,EAAS,CAAEsC,KAAM,sBAAuBoG,QAAS,CAACa,EAAOC,MAiB3CD,MAAOxJ,EAAMmH,eACbuC,MAAO,CAAEC,IAAK,EAAGC,IAAK,GACtBC,YAAY,cAGhB,kBAAC,KAAD,CACEpG,UAAU,sBACV6F,SAAO,EACPC,QArCU,SAAA7H,GACtB,IAAM8H,EAAQ7B,SAASjG,EAAE,IACnB+H,EAAM9B,SAASjG,EAAE,IAEvBzB,EAAS,CAAEsC,KAAM,oBAAqBoG,QAAS,CAACa,EAAOC,MAkC3CD,MAAOxJ,EAAMkH,aACbwC,MAAO,CAAEC,IAAK,EAAGC,IAAK,OAG1B,kBAACT,GAAD,OAEF,kBAAC,GAAD,SCvGH,IAAMW,GAAqB,SAAC9L,EAAK+L,EAAQ3L,EAAM4L,GACpD,IAMIC,EACAC,EAPEC,EAAiC,IAAlBJ,EAAOxM,OAAeoK,SAASoC,GAAUpC,SAASoC,EAAOrC,UAAU,IAElFnB,EAAQ,GACRE,EAAQuD,EAAWI,WAAU,SAAAC,GAAC,OAAIA,IAAMjM,KAE1CkM,EAAa,EAIjB,GAAIH,GAAgB,EAGlB,IAAK,IAAI9C,EAAI,EAAGA,EAAI8C,EAAeG,KAE7B7D,EAAQY,EAAI,GAF6BA,IAM7C6C,EAAyC,KADzCA,EAAgBhE,GAAqBlI,EAAKX,EAAa2M,EAAWvD,EAAQY,MAC5C9J,OAAeoK,SAASuC,GAAiBvC,SAASuC,EAAcxC,UAAU,IAEpGL,EAAI,GAAK6C,GAAiBD,EAC5BK,KAIF/D,EAAMtI,KAAK+L,EAAWvD,EAAQY,IAE9B4C,EAAiBC,QAOnB,IAAK,IAAI7C,EAAI,EAAGA,GAAK,EAAI8C,EAAeG,KAElC7D,EAAQY,EAAI2C,EAAWzM,OAAS,GAFc8J,IAMlD6C,EAAyC,KADzCA,EAAgBhE,GAAqBlI,EAAKX,EAAa2M,EAAWvD,EAAQY,MAC5C9J,OAAeoK,SAASuC,GAAiBvC,SAASuC,EAAcxC,UAAU,IAGpGL,EAAI,GAAK6C,GAAiBD,IAAsC,IAAlBC,GAA0C,IAAnBD,GACvEK,KAIF/D,EAAMtI,KAAK+L,EAAWvD,EAAQY,IAE9B4C,EAAiBC,GAKrB,OAAO3D,GCjDM,SAAS/G,GAAT,GAA6B,IAAX+K,EAAU,EAAVA,OAEzB9L,EAAYmB,mBACZC,EAAeD,mBAHoB,EAKfE,qBAAW0K,IALI,mBAKlCxK,EALkC,KAK3BC,EAL2B,KAOzCC,qBAAU,WACRyG,GAAoBlI,EAAWoB,GAC/B0K,EAAO9L,EAAUE,QAASkB,EAAalB,WAEtC,IAIH,IAuCM8L,EAAiB,SAACC,EAAYC,GAClC,OAAO7M,EAAiB4M,KAAgB5M,EAAiB6M,IAG3D,OACE,6BACE,4BACErJ,IAAK7C,EACL8C,MAAO,IACPC,OAAQ,IACRC,YAjDkB,SAAAC,GAEtB,IAAMvB,EAAM1B,EAAUE,QAAQyB,WAAW,MAFd,EAGZ7B,EAAuBmD,EAAGjD,GAHd,mBAGpBb,EAHoB,KAGjBC,EAHiB,KAIrBO,EAAOF,EAAYN,EAAGC,GAI5B,GAHAoC,EAAS,CAAEsC,KAAM,kBAAmBoG,QAASvK,IAGzCA,EAIF,GAFcqM,EAAerM,EAAM4B,EAAM2K,YAKpC,CACH1K,EAAS,CAAEsC,KAAM,cACjB,IAAMmE,EAAcR,GAAqBlG,EAAMhC,IAAKX,EAAae,IAOjE,GALoB,MAAhBsI,GAAuC,oBAAhB1G,EAAM8G,OAC/BkB,GAASlK,EAAiBM,GAAO,MAEnCiE,GAASlC,EAAK/B,EAAsB,MAAhBsI,EAAsBA,EAAc,IAAK,OAAQ,SAEjD,oBAAhB1G,EAAM8G,MAA6B,CACrC,IAAMP,EAAQuD,GAAmB9J,EAAMhC,IAAK0I,EAAatI,EAAM4B,EAAMgK,YAErEvH,YAAW,WACTwF,GAAoB1B,EAAO,IAC3BD,GAAoBnG,EAAKH,EAAMhC,IAAKuI,EAAO,OAC1C,SAjBLyB,GAASlK,EAAiBM,GAAO,UCjC1B,SAASsF,KAAW,IAAD,EAEN5D,qBAAW0K,IAFL,mBAEzBxK,EAFyB,KAElBC,EAFkB,KAUhC,OACE,yBAAKwD,UAAU,kBACb,wBAAIA,UAAU,eAAd,gBACA,uBAAGA,UAAU,kBAAb,+SAMA,yBAAKA,UAAU,kBACb,kBAAC,KAAD,CAAYgF,SAhBG,SAAAjK,GAEnByB,EAAS,CAAEsC,KAAM,YAAaoG,QAASnK,EAAMoM,OAAOnG,QACpDnB,SAASuH,cAAcC,SAcjB,4BAAQC,aAA8B,gBAAhB/K,EAAM8G,MAAyBrC,MAAM,eAA3D,eACA,4BAAQsG,aAA8B,gBAAhB/K,EAAM8G,MAAyBrC,MAAM,eAA3D,eACA,4BAAQsG,aAA8B,oBAAhB/K,EAAM8G,MAA6BrC,MAAM,mBAA/D,qBAGJ,uBAAGhB,UAAU,kBAAb,qSAKA,uBAAGA,UAAU,kBAAb,SACQ,yCADR,2BC3BS,SAASuH,GAAT,GAAoD,IAA5BvM,EAA2B,EAA3BA,UAA2B,KAAhBoB,aAEtBC,qBAAW0K,KAF2B,mBAEzDxK,EAFyD,KAElDC,EAFkD,KAI1D+I,EAAc,SAAAvE,GAElB,GAAKzE,EAAM4B,KAAX,CAGA,IAAMzB,EAAM1B,EAAUE,QAAQyB,WAAW,MAGrCsG,EAAcR,GAAqBlG,EAAMhC,IAAKX,EAAa2C,EAAM2K,aAMrE,GAJoB,oBAAhB3K,EAAM8G,QACRJ,EAAqC,IAAvBA,EAAYnJ,OAAemJ,EAAcA,EAAYgB,UAAU,IAG3EhB,IAAgBjC,EAAMwG,YAKxB,GAHA5I,GAASlC,EAAKH,EAAM2K,WAA4B,MAAhBjE,EAAsBA,EAAc,IAAK,OAAQ,SACjFzG,EAAS,CAAEsC,KAAM,kBAAmBoG,QAAS3I,EAAM2K,aAE/B,oBAAhB3K,EAAM8G,MAA6B,CAErC,IAAMP,EAAQuD,GAAmB9J,EAAMhC,IAAK0I,EAAa1G,EAAM2K,WAAY3K,EAAMgK,YAEjFvH,YAAW,WAETwF,GAAoB1B,EAAO,IAC3BD,GAAoBnG,EAAKH,EAAMhC,IAAKuI,EAAO,OAC1C,SAOLtG,EAAS,CAAEsC,KAAM,kBAAmBoG,QAAQ,GAAD,OAAK/H,KAAKE,YAGvDwC,SAASuH,cAAcC,SAGzB,OACE,yBAAKrH,UAAU,yDAEb,6BACE,wBAAIA,UAAU,kCAAd,iBACA,yBAAKA,UAAU,OACb,kBAACqF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,QAAQ0H,QAAQ,EAAOD,YAAa,kBAAMA,EAAY,KAApF,KACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,QAAQ0H,QAAQ,EAAOD,YAAa,kBAAMA,EAAY,KAApF,KACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,QAAQ0H,QAAQ,EAAOD,YAAa,kBAAMA,EAAY,KAApF,KACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,QAAQ0H,QAAQ,EAAOD,YAAa,kBAAMA,EAAY,KAApF,KACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,QAAQ0H,QAAQ,EAAOD,YAAa,kBAAMA,EAAY,KAApF,KACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,QAAQ0H,QAAQ,EAAOD,YAAa,kBAAMA,EAAY,KAApF,KACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,QAAQ0H,QAAQ,EAAOD,YAAa,kBAAMA,EAAY,KAApF,MAEF,yBAAKvF,UAAS,cAAyB,oBAAhBzD,EAAM8G,MAA8B,UAAY,aAAe/C,MAAO,CAAEmH,YAAa,SAC1G,kBAACpC,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,QAAQ0H,QAAQ,EAAOD,YAAa,kBAAMA,EAAY,QAApF,MACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,QAAQ0H,QAAQ,EAAOD,YAAa,kBAAMA,EAAY,QAApF,MACA,4BAAQvF,UAAS,UAAaM,MAAO,CAAExC,MAAO,QAAS4J,OAAQ,WAAaC,UAAQ,IACpF,kBAACtC,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,QAAQ0H,QAAQ,EAAOD,YAAa,kBAAMA,EAAY,QAApF,MACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,QAAQ0H,QAAQ,EAAOD,YAAa,kBAAMA,EAAY,QAApF,MACA,kBAACF,GAAD,CAAQrF,UAAU,MAAMlC,MAAM,QAAQ0H,QAAQ,EAAOD,YAAa,kBAAMA,EAAY,QAApF,S,aCxEK,SAASqC,GAAT,GAAyD,IAApCC,EAAmC,EAAnCA,iBAAqBC,EAAc,qCAUrE,OACE,6BACGD,EATH,uBAAQC,EAAR,YAIA,uBAAQA,EAAR,WCTG,IAAMtH,GAAe,CAC1B6C,MAAO,cACPP,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,MAChCvI,IAAK,GACLwN,WAAY,GACZ5J,KAAM,GACNoI,WAAY,GACZU,WAAY,GACZC,WAAY,GACZ7G,OAAQ,EACRoD,aAAc,CAAC,EAAG,GAClBuE,gBAAgB,GAGLtH,GAAU,SAACnE,EAAOoE,GAC7B,OAAQA,EAAO7B,MACb,IAAK,YACH,OAAO,eACFvC,EADL,CAEE8G,MAAO1C,EAAOuE,UAElB,IAAK,UACH,OAAO,eACF3I,EADL,CAEEhC,IAAKoG,EAAOuE,UAEhB,IAAK,kBACH,OAAO,eACF3I,EADL,CAEEwL,WAAYpH,EAAOuE,UAGvB,IAAK,WACH,OAAO,eACF3I,EADL,CAEE4B,KAAMwC,EAAOuE,UAGjB,IAAK,kBACH,OAAO,eACF3I,EADL,CAEEgK,WAAY5F,EAAOuE,UAGvB,IAAK,kBACH,OAAO,eACF3I,EADL,CAEE0K,WAAYtG,EAAOuE,UAGvB,IAAK,YACH,OAAO,eACF3I,EADL,CAEE8D,OAAQ9D,EAAM8D,OAAS,IAG3B,IAAK,kBACH,OAAO,eACF9D,EADL,CAEE2K,WAAYvG,EAAOuE,UAEvB,IAAK,oBACH,OAAO,eACF3I,EADL,CAEEkH,aAAc9C,EAAOuE,UAEzB,IAAK,sBACH,OAAO,eACF3I,EADL,CAEEyL,eAAgBrH,EAAOuE,UAE3B,QACE,OAAO3I,IC1DAwK,GAAiBxG,0BAEf,SAASuE,KAEtB,IAAM9J,EAAYmB,mBACZC,EAAeD,mBACf8L,EAAW9L,mBACX+L,EAAsB/L,kBAAO,GALK,EAMd2E,qBAAWJ,GAASF,IANN,mBAMjCjE,EANiC,KAM1BC,EAN0B,OAQNR,oBAAS,GARH,mBAQjCmM,EARiC,KAQtBC,EARsB,OASIpM,oBAAS,GATb,mBASjCgM,EATiC,KASjBK,EATiB,KAWlCC,EAAanM,kBAAO,GAO1BM,qBAAU,WACRwL,EAAS/M,QAAUqB,IAElB,CAACA,EAAM8G,MAAO9G,EAAMkH,eAEvBhH,qBAAU,WAEHyL,EAAoBhN,QASvBgN,EAAoBhN,SAAU,GAR9BkN,GAAa,GAEbpJ,YAAW,WACToJ,GAAa,KACZ,QAMJ,CAAC7L,EAAM0K,aAEVxK,qBAAU,WACR6L,EAAWpN,QAAU8M,IACpB,CAACA,IAEJvL,qBAAU,WACR,IAAM8L,EAAc,SAAAtK,GAClB,GAAkB,KAAdA,EAAEwB,UAAmB6I,EAAWpN,QAAS,CAE3CsB,EAAS,CAAEsC,KAAM,sBAAuBoG,SAAS,IACjDmD,GAAkB,GAClB,IAAMG,EAAWjM,EAAMuG,MAAM3F,KAAKC,MAAMD,KAAKE,SAAWd,EAAMuG,MAAMhJ,SACpE0C,EAAS,CAAEsC,KAAM,UAAWoG,QAAStL,EAAa4O,KAClD,IAAMC,EAAYpO,EAAiBmO,GAC7BE,EAAWD,EAAUxE,UAAU,EAAG,GAElC0E,EAAYxG,GAAkB8F,EAAS/M,QAAQmI,OAC/C5J,EAAQ4I,GAAcqG,EAAUC,GAGtC,GAFAnM,EAAS,CAAEsC,KAAM,kBAAmBoG,QAASzL,IAEd,oBAA3BwO,EAAS/M,QAAQmI,OfrDJ,SAAC5J,EAAOK,GAE/BwK,GAAUpG,qBAAqBzE,EAAOK,GeqD9B8O,ClBqB0B,SAACC,EAAMpP,GACzC,IAAIqP,EAAa,CAACD,GACZ1K,EAAO0K,EAAK5E,UAAU,EAAG,GACzB8E,EAAaF,EAAK5E,UAAU,GAE5B+E,EAAY9H,EAAS/C,GAe3B,OAbI+C,EAASzH,EAAM,IAAMuP,EACvBF,EAAWtO,KAAX,UAAmBf,EAAM,IAAzB,OAA8ByK,SAAS6E,GAAc,IAGrDD,EAAWtO,KAAX,UAAmBf,EAAM,IAAzB,OAA8BsP,IAE5B7H,EAASzH,EAAM,IAAMuP,EACvBF,EAAWtO,KAAX,UAAmBf,EAAM,IAAzB,OAA8ByK,SAAS6E,GAAc,IAGrDD,EAAWtO,KAAX,UAAmBf,EAAM,IAAzB,OAA8BsP,IAGzBD,EkB1CsBG,CAAqBR,EAAWhP,GAC7B,WAIxB8K,GAASkE,EAAW,MAGtBzN,EAAUE,QAAQyB,WAAW,MAAMK,UAAUZ,EAAalB,QAAS,EAAG,GACtE,IAAMqL,EAAanD,GAAUpI,EAAWiN,EAAS/M,QAAQmI,MAAOqF,GAAU,GAAO,GAAO,EAAMT,EAAS/M,QAAQuI,cACzGyD,EAAagC,EAAc3C,GAC3B4C,EAAavP,EAAasN,GAEhC1K,EAAS,CAAEsC,KAAM,kBAAmBoG,QAASgC,IAC7C1K,EAAS,CAAEsC,KAAM,WAAYoG,QAASiE,IACtC3M,EAAS,CAAEsC,KAAM,kBAAmBoG,QAASqB,IAG7CvH,YAAW,WACTuF,GAASlK,EAAiB6M,GAAa,MACvC1K,EAAS,CAAEsC,KAAM,sBAAuBoG,SAAS,IACjDmD,GAAkB,KACjB,QAMP,OAFAxI,SAASC,iBAAiB,QAASyI,GAE5B,WACL1I,SAASE,oBAAoB,QAASwI,MAGvC,IAEH,IAAMW,EAAgB,SAAApG,GACpB,OAAOA,EAAM3F,KAAKC,MAAMD,KAAKE,SAAWyF,EAAMhJ,OAAS,KAUzD,OACE,6BACE,kBAACiN,GAAehG,SAAhB,CAAyBC,MAAO,CAACzE,EAAOC,IACtC,yBAAKwD,UAAU,2CACb,6BACE,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,2BACb,kBAAC,GAAD,CAAQ8G,OAjGP,SAACsC,EAAMC,GACpBrO,EAAUE,QAAUkO,EACpBhN,EAAalB,QAAUmO,KAgGX,kBAAC,KAAD,CACErJ,UAAU,sBACVsJ,KAAM,CACJC,KAAM,SACNC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAC/CC,QAAS,GACTC,SAAS,GAEX7D,SAAO,EACPC,QAxBQ,SAAA7H,GACtB,IAAM8H,EAAQ7B,SAASjG,EAAE,IACnB+H,EAAM9B,SAASjG,EAAE,IAEvBzB,EAAS,CAAEsC,KAAM,oBAAqBoG,QAAS,CAACa,EAAOC,MAqBzCD,MAAOxJ,EAAMkH,aACbwC,MAAO,CAAEC,IAAK,EAAGC,IAAK,OAG1B,kBAACoB,GAAD,CAAcvM,UAAWA,EAAWoB,aAAcA,IAEhD+L,GACA,kBAACP,GAAD,CACE5H,UAAU,2DACV6H,iBAAkBtL,EAAM2K,aAAe3K,EAAM0K,eAKrD,kBAAC,GAAD,SC7IK,SAASlL,KAEtB,IAAMf,EAAYmB,mBACZC,EAAeD,mBAErBM,qBAAU,WACRyG,GAAoBlI,EAAWoB,EAAcuN,KAC5C,IAGH,IAAMA,EAAgB,WAEpB,IAAMC,EAAW,IAAInO,IAAc,aACvB,IAAIA,KAAiBoK,QAAQ+D,GACrCC,OAAOC,MAAK,WAEdC,QAAQC,IAAI,WAGZD,QAAQC,IAAIJ,EAASK,eACpBC,OAAM,SAAAjM,GAEP8L,QAAQC,IAAI,oBAiBhB,OACE,6BACE,4BACEnM,IAAK7C,EACL8C,MAAO,IACPC,OAAQ,IACRC,YAnBkB,SAAAC,GAEtB,IAAMvB,EAAM1B,EAAUE,QAAQyB,WAAW,MAFd,EAGZ7B,EAAuBmD,EAAGjD,GAHd,mBAGpBb,EAHoB,KAGjBC,EAHiB,KAIrBO,EAAOF,EAAYN,EAAGC,GAExBO,IACF4J,GAASlK,EAAiBM,GAAO,MACjCiE,GAASlC,EAAK/B,EAAMf,EAAae,IACjCsE,GAAwBvC,EAAKN,EAAc,UCzClC,SAAS6D,KACtB,OACE,yBAAKD,UAAU,kBACb,wBAAIA,UAAU,eAAd,SACA,uBAAGA,UAAU,kBAAb,yFAGA,uBAAGA,UAAU,kBAAb,iFCPS,SAAS8E,KACtB,OACE,6BACE,yBAAK9E,UAAU,2CACb,6BACE,kBAAC,GAAD,OAEF,kBAAC,GAAD,Q,sBCROmK,iBAAW,YAA+B,IAAbC,EAAY,EAAZA,SAE1C,OACE,6BACE,yBAAKpK,UAAU,+CACb,wBAAIA,UAAU,cACZ,wBAAIA,UAAS,mBAAoC,MAAtBoK,EAASC,UAAoB,WACtD,kBAAC,KAAD,CAAMrK,UAAU,WAAWsK,GAAG,KAA9B,SAEF,wBAAItK,UAAS,mBAAoC,uBAAtBoK,EAASC,UAAqC,WACvE,kBAAC,KAAD,CAAMrK,UAAU,WAAWsK,GAAG,qBAA9B,cAEF,wBAAItK,UAAS,mBAAoC,oBAAtBoK,EAASC,UAAkC,WACpE,kBAAC,KAAD,CAAMrK,UAAU,WAAWsK,GAAG,kBAA9B,WAEF,wBAAItK,UAAS,mBAAoC,kBAAtBoK,EAASC,UAAgC,WAClE,kBAAC,KAAD,CAAMrK,UAAU,WAAWsK,GAAG,gBAA9B,uBCjBG,SAASC,KACtB,OACE,yBAAKvK,UAAU,SACb,yBAAKA,UAAU,wDACb,yBAAKlD,IAAI,0BAA0B0N,IAAI,SAASzM,OAAO,QACvD,yBAAKiC,UAAU,sBACb,yBAAKlD,IAAI,4BAA4BkD,UAAU,iCAAiCwK,IAAI,UACpF,yBAAKxK,UAAU,wDAAwDM,MAAO,CAAEhF,IAAK,QAASF,KAAM,QAASqP,eAAgB,cAA7H,wCAGF,yBAAK3N,IAAI,2BAA2B0N,IAAI,SAASzM,OAAO,SAE1D,yBAAKiC,UAAU,oDACb,yBAAKA,UAAU,YACb,wCACA,uBAAGA,UAAU,IAAb,4HAEA,6GAIF,yBAAKA,UAAU,8CACb,yBAAKlD,IAAI,2BAA2B0N,IAAI,iBAAiBzM,OAAO,QAChE,6BACE,2BAAG,wIAEH,yBAAKiC,UAAU,cACb,sDC3BC,SAAS0K,KACtB,OACE,yBAAK1K,UAAU,8DACb,uBAAGA,UAAU,oCAAb,uCC4BS2K,OApBf,WAEE,OACE,6BACE,kBAAC,KAAD,KACE,kBAAC,GAAD,MACA,kBAAC,KAAD,CAAOC,KAAK,qBAAqBC,UAAWhK,IAC5C,kBAAC,KAAD,CAAO+J,KAAK,oBAAoBC,UAAW/F,KAC3C,kBAAC,KAAD,CAAO8F,KAAK,kBAAkBC,UAAWjF,KACzC,kBAAC,KAAD,CAAOgF,KAAK,gBAAgBC,UAAWC,KACvC,kBAAC,KAAD,CAAOF,KAAK,SAASC,UAAWE,KAChC,kBAAC,KAAD,CAAOC,OAAK,EAACJ,KAAK,WAAWC,UAAWN,MAE1C,yBAAKvK,UAAU,gBACb,kBAAC0K,GAAD,SCfYO,QACW,cAA7BC,OAAOd,SAASe,UAEe,UAA7BD,OAAOd,SAASe,UAEhBD,OAAOd,SAASe,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEF1L,SAAS2L,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7B,MAAK,SAAA8B,GACJA,EAAaC,gBAEd3B,OAAM,SAAA4B,GACL/B,QAAQ+B,MAAMA,EAAMC,c","file":"static/js/main.b7b8455d.chunk.js","sourcesContent":["\r\nexport const notes = [\r\n  'C',\r\n  'C#',\r\n  'D',\r\n  'D#',\r\n  'E',\r\n  'F',\r\n  'F#',\r\n  'G',\r\n  'G#',\r\n  'A',\r\n  'A#',\r\n  'B',\r\n]\r\n\r\n\r\nconst strings = ['E', 'A', 'D', 'G', 'B', 'e']\r\nconst firstNoteIndexes = [5, 10, 3, 8, 12, 5]\r\n\r\n\r\n// Object for converting E1 -> F and A3 -> C etc.\r\n\r\nconst fretsToNotes = {}\r\n\r\nfor (let a = 0; a < strings.length; a++) {\r\n  for (let b = 0; b <= 12; b++) {\r\n    fretsToNotes[`${strings[a]}${b}`] = notes[(firstNoteIndexes[a] + b - 1) % 12]\r\n  }\r\n}\r\n\r\nexport { fretsToNotes }","\r\nexport const FRET_WIDTH = 61;\r\nexport const FRET_HEIGHT = 25;\r\n\r\nexport const E_FRET_HEIGHT = 162;\r\nexport const A_FRET_HEIGHT = 137;\r\nexport const D_FRET_HEIGHT = 112;\r\nexport const G_FRET_HEIGHT = 87;\r\nexport const B_FRET_HEIGHT = 62;\r\nexport const e_FRET_HEIGHT = 37;\r\n\r\nconst ZERO_FRET_X = 21\r\n\r\nconst strings = ['E', 'A', 'D', 'G', 'B', 'e']\r\n\r\n\r\n// Coordinates of first fret of every string\r\n// Initiation not necessary but gives an idea how points are constructed\r\n\r\nconst fretboardPoints = {\r\n  // 'E0': { x: ZERO_FRET_X, y: E_FRET_HEIGHT },\r\n  // 'A0': { x: ZERO_FRET_X, y: A_FRET_HEIGHT },\r\n  // 'D0': { x: ZERO_FRET_X, y: D_FRET_HEIGHT },\r\n  // 'G0': { x: ZERO_FRET_X, y: G_FRET_HEIGHT },\r\n  // 'B0': { x: ZERO_FRET_X, y: B_FRET_HEIGHT },\r\n  // 'e0': { x: ZERO_FRET_X, y: e_FRET_HEIGHT },\r\n}\r\n\r\n\r\n// Let's initiate fretboard circles for every note up until 12th fret\r\n\r\nfor (let stringIndex = 0; stringIndex < strings.length; stringIndex++) {\r\n  for (let nthFret = 0; nthFret <= 12; nthFret++) {\r\n    fretboardPoints[`${strings[stringIndex]}${nthFret}`] = {\r\n      x: nthFret > 0 ? fretboardPoints[`${strings[stringIndex]}${nthFret - 1}`].x + FRET_WIDTH : ZERO_FRET_X,\r\n      y: E_FRET_HEIGHT - stringIndex * FRET_HEIGHT\r\n    }\r\n  }\r\n}\r\n\r\n// LEGACY\r\n\r\n// for (let stringIndex = 0; stringIndex < strings.length; stringIndex++) {\r\n//   for (let nthFret = 1; nthFret <= 12; nthFret++) {\r\n//     fretboardPoints[`${strings[stringIndex]}${nthFret}`] = {\r\n//       x: fretboardPoints[`${strings[stringIndex]}${nthFret - 1}`].x + FRET_WIDTH,\r\n//       y: E_FRET_HEIGHT - stringIndex * FRET_HEIGHT\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport { fretboardPoints }","\r\nexport const FRETS_TO_PITCHES = {\r\n  'E0': 'E2',\r\n  'E1': 'F2',\r\n  'E2': 'F#2',\r\n  'E3': 'G2',\r\n  'E4': 'G#2',\r\n  'E5': 'A2',\r\n  'E6': 'A#2',\r\n  'E7': 'B2',\r\n  'E8': 'C3',\r\n  'E9': 'C#3',\r\n  'E10': 'D3',\r\n  'E11': 'D#3',\r\n  'E12': 'E3',\r\n\r\n  'A0': 'A2',\r\n  'A1': 'A#2',\r\n  'A2': 'B2',\r\n  'A3': 'C3',\r\n  'A4': 'C#3',\r\n  'A5': 'D3',\r\n  'A6': 'D#3',\r\n  'A7': 'E3',\r\n  'A8': 'F3',\r\n  'A9': 'F#3',\r\n  'A10': 'G3',\r\n  'A11': 'G#3',\r\n  'A12': 'A3',\r\n\r\n  'D0': 'D3',\r\n  'D1': 'D#3',\r\n  'D2': 'E3',\r\n  'D3': 'F3',\r\n  'D4': 'F#3',\r\n  'D5': 'G3',\r\n  'D6': 'G#3',\r\n  'D7': 'A3',\r\n  'D8': 'A#3',\r\n  'D9': 'B3',\r\n  'D10': 'C4',\r\n  'D11': 'C#4',\r\n  'D12': 'D4',\r\n\r\n  'G0': 'G3',\r\n  'G1': 'G#3',\r\n  'G2': 'A3',\r\n  'G3': 'A#3',\r\n  'G4': 'B3',\r\n  'G5': 'C4',\r\n  'G6': 'C#4',\r\n  'G7': 'D4',\r\n  'G8': 'D#4',\r\n  'G9': 'E4',\r\n  'G10': 'F4',\r\n  'G11': 'F#4',\r\n  'G12': 'G4',\r\n\r\n  'B0': 'B3',\r\n  'B1': 'C4',\r\n  'B2': 'C#4',\r\n  'B3': 'D4',\r\n  'B4': 'D#4',\r\n  'B5': 'E4',\r\n  'B6': 'F4',\r\n  'B7': 'F#4',\r\n  'B8': 'G4',\r\n  'B9': 'G#4',\r\n  'B10': 'A4',\r\n  'B11': 'A#4',\r\n  'B12': 'B4',\r\n\r\n  'e0': 'E4',\r\n  'e1': 'F4',\r\n  'e2': 'F#4',\r\n  'e3': 'G4',\r\n  'e4': 'G#4',\r\n  'e5': 'A4',\r\n  'e6': 'A#4',\r\n  'e7': 'B4',\r\n  'e8': 'C5',\r\n  'e9': 'C#5',\r\n  'e10': 'D5',\r\n  'e11': 'D#5',\r\n  'e12': 'E5'\r\n}\r\n\r\nconst PITCHES_TO_FRETS = {}\r\n\r\nfor (let key in FRETS_TO_PITCHES) {\r\n  if (!PITCHES_TO_FRETS[FRETS_TO_PITCHES[key]])\r\n    PITCHES_TO_FRETS[FRETS_TO_PITCHES[key]] = [key]\r\n\r\n  else\r\n    PITCHES_TO_FRETS[FRETS_TO_PITCHES[key]].push(key)\r\n}\r\n\r\nexport { PITCHES_TO_FRETS }","\r\nimport { FRET_WIDTH, fretboardPoints as fP } from './fretboardPoints'\r\nconst Y_MARGIN = 10\r\n\r\n\r\nexport const inWhichFret = (x, y, stringY) => {\r\n\r\n  for (const fret in fP) {\r\n    if (!stringY || (fP[fret].y > stringY - Y_MARGIN && fP[fret].y < stringY + Y_MARGIN))\r\n      if (fP[fret].x > (x - FRET_WIDTH / 2) && fP[fret].x < (x + FRET_WIDTH / 2)) {\r\n        if (fP[fret].y > (y - Y_MARGIN) && fP[fret].y < (y + Y_MARGIN)) {\r\n          return fret\r\n        }\r\n      }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nexport const onMouseDownCoordinates = (event, canvasRef) => {\r\n\r\n  const x = event.clientX - canvasRef.current.getBoundingClientRect().left\r\n  const y = event.clientY - canvasRef.current.getBoundingClientRect().top\r\n\r\n  return [x, y]\r\n}","import React, { useRef, useEffect, useContext, useState } from 'react'\r\nimport {\r\n  fretboardPoints,\r\n  E_FRET_HEIGHT,\r\n  A_FRET_HEIGHT,\r\n  D_FRET_HEIGHT,\r\n  G_FRET_HEIGHT,\r\n  B_FRET_HEIGHT,\r\n  e_FRET_HEIGHT\r\n} from '../../helpers/fretboardPoints'\r\n\r\nimport { fretsToNotes } from '../../helpers/fretsToNotes'\r\nimport * as Tone from 'tone'\r\nimport { FRETS_TO_PITCHES } from '../../helpers/pitches'\r\nimport { inWhichFret } from '../../helpers/fretboardHitpoints'\r\nimport { FretboardMasteryCtx } from '../../pages/FretboardMastery'\r\n\r\nconst STRINGS = [\r\n  E_FRET_HEIGHT,\r\n  A_FRET_HEIGHT,\r\n  D_FRET_HEIGHT,\r\n  G_FRET_HEIGHT,\r\n  B_FRET_HEIGHT,\r\n  e_FRET_HEIGHT\r\n]\r\n\r\nconst LETTER_HEIGHT_CORRECTION = 4\r\nconst STRING_X_STARTING_COORDINATE = 53\r\nconst STRING_X_ENDING_COORDINATE = 840\r\n\r\nconst synth = new Tone.PluckSynth({\r\n  attackNoise: 1,\r\n  release: 5,\r\n  dampening: 100,\r\n  resonance: 0.99\r\n}).toDestination()\r\n\r\n\r\nexport default function Canvas() {\r\n\r\n  const [activeString, setActiveString] = useState()\r\n\r\n  const canvasRef = useRef()\r\n  const fretboardRef = useRef()\r\n\r\n  const [state, dispatch] = useContext(FretboardMasteryCtx)\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    const ctx = canvas.getContext(\"2d\")\r\n\r\n    const fretboard = new Image()\r\n    fretboardRef.current = fretboard\r\n    fretboard.src = './assets/images/fretboard1.png'\r\n\r\n    fretboard.onload = () => {\r\n      ctx.drawImage(fretboard, 0, 0)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!state.gameFinished) {\r\n      const ctx = canvasRef.current.getContext('2d')\r\n      ctx.drawImage(fretboardRef.current, 0, 0)\r\n      drawActiveString()\r\n    }\r\n  }, [state.gameFinished])\r\n\r\n  // const isNote = fret => fretsToNotes[fret]\r\n\r\n  const drawBackgroundWithDelay = (ctx, ms) => {\r\n    setTimeout(() => {\r\n      ctx.drawImage(fretboardRef.current, 0, 0)\r\n      drawActiveString()\r\n    }, ms)\r\n  }\r\n\r\n  const drawNote = (ctx, x, y, note, bgColor, color) => {\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, 10, 0, 2 * Math.PI);\r\n    ctx.fillStyle = bgColor\r\n    ctx.fill()\r\n    ctx.font = \"10px Arial\";\r\n    ctx.fillStyle = color\r\n    ctx.textAlign = 'center'\r\n    ctx.fillText(note, x, y + LETTER_HEIGHT_CORRECTION)\r\n    ctx.stroke();\r\n  }\r\n\r\n  const handleMouseDown = e => {\r\n\r\n    // You can play notes only when game is on\r\n    if (state.gameFinished)\r\n      return\r\n\r\n    const canvas = canvasRef.current\r\n    const ctx = canvas.getContext(\"2d\")\r\n\r\n    const x = e.clientX - canvasRef.current.getBoundingClientRect().left\r\n    const y = e.clientY - canvasRef.current.getBoundingClientRect().top\r\n\r\n    const fret = inWhichFret(x, y, activeString)\r\n\r\n    if (fret) {\r\n\r\n\r\n      synth.triggerAttackRelease(FRETS_TO_PITCHES[fret], '4n')\r\n      drawNote(ctx, fretboardPoints[fret].x, fretboardPoints[fret].y, fretsToNotes[fret], 'black', 'white');\r\n\r\n      if (fretsToNotes[fret] === state.noteToQuess)\r\n        dispatch({ type: 'ADD_POINT' })\r\n\r\n      dispatch({ type: 'NEW_NOTE' })\r\n\r\n      drawBackgroundWithDelay(ctx, 500)\r\n    }\r\n  }\r\n\r\n  const drawActiveString = () => {\r\n    const stringIndex = Math.floor(Math.random() * STRINGS.length)\r\n    const string = STRINGS[stringIndex]\r\n    setActiveString(string)\r\n    const ctx = canvasRef.current.getContext('2d')\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(STRING_X_STARTING_COORDINATE, string)\r\n    ctx.fillStyle = 'red'\r\n    ctx.lineWidth = 5\r\n\r\n    ctx.lineTo(STRING_X_ENDING_COORDINATE, string)\r\n    ctx.stroke();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={840}\r\n        height={225}\r\n        onMouseDown={handleMouseDown}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport { FretboardMasteryCtx } from '../../pages/FretboardMastery'\r\n\r\n\r\nconst GAME_DURATION = 60\r\n\r\nexport default function Counter() {\r\n\r\n  const [counter, setCounter] = useState(GAME_DURATION + 4)\r\n  const [, dispatch] = useContext(FretboardMasteryCtx)\r\n\r\n  const interval = useRef(null)\r\n  const counterRef = useRef(counter)\r\n\r\n  useEffect(() => {\r\n\r\n    const handleKeyUp = e => {\r\n      if (e.keyCode === 32) {\r\n\r\n        // Game time ended\r\n\r\n        if (counterRef.current === 0 && interval.current) {\r\n          clearInterval(interval.current)\r\n          setCounter(GAME_DURATION + 3)\r\n\r\n          interval.current = setInterval(() => {\r\n            setCounter(prevCounter => prevCounter - 1)\r\n          }, 1000)\r\n        }\r\n\r\n        // Game time still left\r\n\r\n        else if (interval.current) {\r\n\r\n          clearInterval(interval.current)\r\n          interval.current = null\r\n          dispatch({ type: 'FINISH_GAME' })\r\n        }\r\n\r\n        // First game starting\r\n\r\n        else {\r\n          interval.current = setInterval(() => {\r\n            setCounter(prevCounter => prevCounter - 1)\r\n          }, 1000)\r\n\r\n          setCounter(GAME_DURATION + 3)\r\n        }\r\n      }\r\n    }\r\n\r\n    document.addEventListener('keyup', handleKeyUp)\r\n\r\n    return () => {\r\n      clearInterval(interval.current)\r\n      document.removeEventListener('keyup', handleKeyUp)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n\r\n    // This needed for event listener\r\n    counterRef.current = counter\r\n\r\n    if (counter === GAME_DURATION) {\r\n      dispatch({ type: 'START_GAME' })\r\n      dispatch({ type: 'NEW_NOTE' })\r\n    }\r\n\r\n    if (counter === 0) {\r\n      clearInterval(interval.current)\r\n      dispatch({ type: 'FINISH_GAME' })\r\n    }\r\n  }, [counter, dispatch])\r\n\r\n\r\n  const renderCounter = () => {\r\n\r\n    return counter <= GAME_DURATION\r\n      ?\r\n      <span>Timer: {counter}</span>\r\n      :\r\n      <span className=\"text-danger display-3 font-weight-bolder\">{interval.current && counter - GAME_DURATION}</span>\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h2>{renderCounter()}</h2>\r\n    </div>\r\n  )\r\n}\r\n","\r\nimport React from 'react'\r\nimport Counter from './Counter'\r\n\r\nexport default function InfoBar() {\r\n  return (\r\n    <div className=\"container pt-3\">\r\n      <h2 className=\"text-center\">Fretboard Mastery</h2>\r\n      <p className=\"pl-3 pt-3 pr-3\">\r\n        Find the right note at the right fret. Try to guess as many as you can in 60 seconds.\r\n      </p>\r\n      <p className=\"pl-3 pr-3 pb-3\">\r\n        The big note\r\n        under the fretboard tells which note to find next.\r\n        The string where you need to find a given note is highlighted during a game.\r\n      </p>\r\n\r\n      <p className=\"pl-3 pr-3 pb-3\">\r\n        Press <kbd>spacebar</kbd> to start a new game.\r\n      </p>\r\n      <p className=\"pl-3 pr-3 pb-3\">\r\n        Happy Gaming! <span role=\"img\" aria-label=\"thumbs up\">👍</span>\r\n      </p>\r\n      <Counter />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { FretboardMasteryCtx } from '../../pages/FretboardMastery'\r\n\r\nexport default function Results() {\r\n\r\n  const [state] = useContext(FretboardMasteryCtx)\r\n\r\n  return (\r\n    <div className=\"w-100 d-flex flex-column\">\r\n      <div className=\"d-flex flex-row justify-content-center\">\r\n        <div className={`mr-4 display-2 font-weight-bolder ${state.gameFinished ? 'text-muted' : 'text-danger'}`}>{state.noteToQuess}</div>\r\n        <h2 className=\"text-muted\">{state.points} points</h2>\r\n      </div>\r\n\r\n      <div className=\"align-self-center mt-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <span className=\"pr-3 d-inline-block font-weight-bolder\" style={{ width: '70px' }}>30 - </span>\r\n            <span>Not sure if you need any more training, champ!</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <span className=\"pr-3 d-inline-block font-weight-bolder\" style={{ width: '70px' }}>20 - 30</span>\r\n            <span>You're fast, but you still have to think of some notes.</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <span className=\"pr-3 d-inline-block font-weight-bolder\" style={{ width: '70px' }}>10 - 20</span>\r\n            <span>Not bad! Just a little more practise</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <span className=\"pr-3 d-inline-block font-weight-bolder\" style={{ width: '70px' }}>5 - 10</span>\r\n            <span>Hey, you already know some. Keep going!</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <span className=\"pr-3 d-inline-block font-weight-bolder\" style={{ width: '70px' }}>0 - 5</span>\r\n            <span>The start is always the hardest</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { createContext, useReducer } from 'react';\nimport { notes } from '../helpers/fretsToNotes';\nimport Canvas from '../components/fretboardMastery/Canvas'\nimport '../components/fretboardMastery/styles/FretboardMastery.css';\nimport InfoBar from '../components/fretboardMastery/InfoBar';\nimport Results from '../components/fretboardMastery/Results';\n\n\nexport const FretboardMasteryCtx = createContext()\n\nconst initialState = {\n  gameFinished: true,\n  points: 0,\n  noteToQuess: 'C',\n  userQuess: ''\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FINISH_GAME':\n      return {\n        ...state,\n        gameFinished: true\n      }\n    case 'START_GAME':\n      return {\n        ...state,\n        gameFinished: false,\n        points: 0\n      }\n    case 'NEW_NOTE':\n      let newNote = notes[Math.floor(Math.random() * notes.length)]\n\n      while (newNote === state.noteToQuess) {\n        newNote = notes[Math.floor(Math.random() * notes.length)]\n      }\n\n      return {\n        ...state,\n        noteToQuess: newNote\n      }\n    case 'ADD_POINT':\n      return {\n        ...state,\n        points: state.points + 1\n      }\n    default:\n      return state\n  }\n}\n\nfunction FretboardMastery() {\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <div>\n      <FretboardMasteryCtx.Provider value={[state, dispatch]} >\n        <div className=\"d-flex flex-row justify-content-between\">\n          <div>\n            <Canvas />\n            <Results />\n          </div>\n          <InfoBar />\n        </div>\n      </FretboardMasteryCtx.Provider>\n    </div>\n  );\n}\n\nexport default FretboardMastery;\n","export const NOTES = [\r\n  'C',\r\n  'C#',\r\n  'D',\r\n  'D#',\r\n  'E',\r\n  'F',\r\n  'F#',\r\n  'G',\r\n  'G#',\r\n  'A',\r\n  'A#',\r\n  'B',\r\n]\r\n\r\nexport const NOTESOBJ = {\r\n  'C': 0,\r\n  'C#': 1,\r\n  'D': 2,\r\n  'D#': 3,\r\n  'E': 4,\r\n  'F': 5,\r\n  'F#': 6,\r\n  'G': 7,\r\n  'G#': 8,\r\n  'A': 9,\r\n  'A#': 10,\r\n  'B': 11,\r\n}\r\n\r\nexport const MAJOR_SCALE = [2, 2, 1, 2, 2, 2, 1]\r\nexport const MINOR_SCALE = [2, 1, 2, 2, 1, 2, 2]\r\nexport const CHROMATIC_SCALE = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\nexport const MAJOR_PENTATONIC_SCALE = [2, 2, 3, 2, 3]\r\nexport const MINOR_PENTATONIC_SCALE = [3, 2, 2, 3, 2]\r\nexport const DORIAN = [2, 1, 2, 2, 2, 1, 2]\r\nexport const PHRYGIAN = [1, 2, 2, 2, 1, 2, 2]\r\nexport const LYDIAN = [2, 2, 2, 1, 2, 2, 1]\r\nexport const MIXOLYDIAN = [2, 2, 1, 2, 2, 1, 2]\r\nexport const LOCRIAN = [1, 2, 2, 1, 2, 2, 2]\r\nexport const MAJOR_BLUES = [2, 1, 1, 3, 2, 3]\r\nexport const MINOR_BLUES = [3, 2, 1, 1, 3, 2]\r\n\r\nexport const SCALE_DEGREES = ['b2', '2', 'b3', '3', '4', 'b5', '5', 'b6', '6', 'b7', '7', 'R']\r\n\r\nexport const MAJOR_TRIAD = ['R', '3', '5']\r\nexport const MINOR_TRIAD = ['R', 'b3', '5']","\r\nimport {\r\n  MAJOR_TRIAD,\r\n  MINOR_TRIAD,\r\n  MINOR_PENTATONIC_SCALE,\r\n  MAJOR_PENTATONIC_SCALE,\r\n  MAJOR_SCALE,\r\n  MINOR_SCALE,\r\n  DORIAN,\r\n  PHRYGIAN,\r\n  LOCRIAN,\r\n  LYDIAN,\r\n  MIXOLYDIAN,\r\n  MAJOR_BLUES,\r\n  MINOR_BLUES,\r\n  NOTES,\r\n  NOTESOBJ,\r\n  SCALE_DEGREES,\r\n  CHROMATIC_SCALE\r\n} from './constants'\r\n\r\nexport let triad = ''\r\n\r\n\r\nexport const getScaleIntervals = scaleName => {\r\n  switch (scaleName) {\r\n    case 'minor pentatonic':\r\n      triad = MINOR_TRIAD\r\n      return MINOR_PENTATONIC_SCALE\r\n\r\n    case 'major pentatonic':\r\n      triad = MAJOR_TRIAD\r\n      return MAJOR_PENTATONIC_SCALE\r\n\r\n    case 'major scale':\r\n      triad = MAJOR_TRIAD\r\n      return MAJOR_SCALE\r\n\r\n    case 'chromatic scale':\r\n      return CHROMATIC_SCALE\r\n\r\n    case 'minor scale':\r\n      triad = MINOR_TRIAD\r\n      return MINOR_SCALE\r\n\r\n    case 'dorian':\r\n      triad = MINOR_TRIAD\r\n      return DORIAN\r\n\r\n    case 'phrygian':\r\n      triad = MINOR_TRIAD\r\n      return PHRYGIAN\r\n\r\n    case 'lydian':\r\n      triad = MAJOR_TRIAD\r\n      return LYDIAN\r\n\r\n    case 'mixolydian':\r\n      triad = MAJOR_TRIAD\r\n      return MIXOLYDIAN\r\n\r\n    case 'locrian':\r\n      triad = MINOR_TRIAD\r\n      return LOCRIAN\r\n\r\n    case 'major blues':\r\n      triad = MAJOR_TRIAD\r\n      return MAJOR_BLUES\r\n\r\n    case 'minor blues':\r\n      triad = MINOR_TRIAD\r\n      return MINOR_BLUES\r\n\r\n    default:\r\n      triad = MINOR_TRIAD\r\n      return MINOR_SCALE\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const getScaleNotes = (key, scaleIntervals) => {\r\n  let currentIndex = NOTESOBJ[key]\r\n\r\n  const notes = scaleIntervals.map(interval => {\r\n    currentIndex = currentIndex + interval < 12 ? currentIndex + interval : currentIndex + interval - 12\r\n    return NOTES[currentIndex]\r\n  })\r\n\r\n  return notes\r\n}\r\n\r\nexport const triadFromNotes = notes => {\r\n  return [notes[notes.length - 1], notes[1], notes[3]]\r\n}\r\n\r\nexport const triadPitchesFromRoot = (root, notes) => {\r\n  let triadArray = [root]\r\n  const note = root.substring(0, 1)\r\n  const rootNumber = root.substring(1)\r\n\r\n  const rootIndex = NOTESOBJ[note]\r\n\r\n  if (NOTESOBJ[notes[1]] < rootIndex)\r\n    triadArray.push(`${notes[1]}${parseInt(rootNumber) + 1}`)\r\n\r\n  else\r\n    triadArray.push(`${notes[1]}${rootNumber}`)\r\n\r\n  if (NOTESOBJ[notes[3]] < rootIndex)\r\n    triadArray.push(`${notes[3]}${parseInt(rootNumber) + 1}`)\r\n\r\n  else\r\n    triadArray.push(`${notes[3]}${rootNumber}`)\r\n\r\n\r\n  return triadArray\r\n}\r\n\r\nexport const seventhChordFromNotes = notes => {\r\n  return [notes[notes.length - 1], notes[1], notes[3], notes[5]]\r\n}\r\n\r\nexport const getRandomScaleNote = (notes) => {\r\n  return notes[Math.floor(Math.random() * notes.length)]\r\n}\r\n\r\nexport const getPreviousAndNextPitch = (rootPitch, note) => {\r\n  const rootNote = rootPitch.substring(0, 1)\r\n  const rootPitchNumber = parseInt(rootPitch.substring(1))\r\n\r\n  const rootIndex = NOTESOBJ[rootNote]\r\n  const noteIndex = NOTESOBJ[note]\r\n\r\n  let pitches = []\r\n\r\n  if (noteIndex <= rootIndex) {\r\n    pitches.push(`${note}${rootPitchNumber}`)\r\n    pitches.push(`${note}${rootPitchNumber + 1}`)\r\n  }\r\n\r\n  else {\r\n    pitches.push(`${note}${rootPitchNumber - 1}`)\r\n    pitches.push(`${note}${rootPitchNumber}`)\r\n  }\r\n\r\n  return pitches\r\n}\r\n\r\nexport const scaleDegreeFromANote = (key, note) => {\r\n\r\n  const halfNoteDifference = NOTESOBJ[key] <= NOTESOBJ[note] ? NOTESOBJ[note] - NOTESOBJ[key] : 12 - NOTESOBJ[key] + NOTESOBJ[note]\r\n\r\n  return halfNoteDifference ? SCALE_DEGREES[halfNoteDifference - 1] : '0'\r\n\r\n}\r\n\r\nexport const getHalfNotes = (scaleIntervals, notes) => {\r\n  const halfNotes = {}\r\n\r\n  for (let i = 0; i < scaleIntervals.length; i++) {\r\n    if (i === 0)\r\n      halfNotes[notes[i]] = scaleIntervals[i]\r\n    else\r\n      halfNotes[notes[i]] = scaleIntervals[i] + halfNotes[notes[i - 1]]\r\n  }\r\n\r\n  return halfNotes\r\n}\r\n\r\n\r\n\r\n","\r\nimport { STRINGS, STRING_X_STARTING_COORDINATE, STRING_X_ENDING_COORDINATE, LETTER_HEIGHT_CORRECTION } from '../constants'\r\nimport { getScaleIntervals, getScaleNotes, getHalfNotes, scaleDegreeFromANote } from '../scales/scales'\r\nimport { SCALE_DEGREES } from '../scales/constants'\r\nimport { fretsToNotes } from '../fretsToNotes'\r\nimport { fretboardPoints } from '../fretboardPoints'\r\nimport { triad } from '../scales/scales'\r\n\r\nconst stringToANumber = { 'e': 1, 'B': 2, 'G': 3, 'D': 4, 'A': 5, 'E': 6 }\r\n\r\nexport const drawBackgroundWithDelay = (ctx, imageRef, ms) => {\r\n  setTimeout(() => {\r\n    ctx.drawImage(imageRef.current, 0, 0)\r\n  }, ms)\r\n}\r\n\r\nexport const drawFrets = (ctx, frets) => {\r\n  for (const fret of frets) {\r\n    drawNote(ctx, fret, fretsToNotes[fret])\r\n  }\r\n}\r\n\r\nexport const drawSequenceOfFrets = (ctx, key, frets, timeBetween) => {\r\n  let index = 0\r\n\r\n  if (!frets.length)\r\n    return\r\n\r\n  const interval = setInterval(() => {\r\n    const scaleDegree = scaleDegreeFromANote(key, fretsToNotes[frets[index]])\r\n\r\n    drawNote(ctx, frets[index], scaleDegree === '0' ? 'R' : scaleDegree, 'blue', 'white')\r\n    if (index === frets.length - 1)\r\n      clearInterval(interval)\r\n\r\n    index++\r\n  }, timeBetween)\r\n}\r\n\r\nexport const drawNote = (ctx, fret, note, bgColor = 'black', color = 'white') => {\r\n  const x = fretboardPoints[fret].x\r\n  const y = fretboardPoints[fret].y\r\n\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, 10, 0, 2 * Math.PI);\r\n  ctx.fillStyle = bgColor\r\n  ctx.fill()\r\n  ctx.font = \"10px Arial\";\r\n  ctx.fillStyle = color\r\n  ctx.textAlign = 'center'\r\n  ctx.fillText(note, x, y + LETTER_HEIGHT_CORRECTION)\r\n  ctx.stroke();\r\n}\r\n\r\nexport const drawActiveString = (canvasRef) => {\r\n  const stringIndex = Math.floor(Math.random() * STRINGS.length)\r\n  const string = STRINGS[stringIndex]\r\n\r\n  const ctx = canvasRef.current.getContext('2d')\r\n\r\n  ctx.beginPath();\r\n  ctx.moveTo(STRING_X_STARTING_COORDINATE, string)\r\n  ctx.fillStyle = 'red'\r\n  ctx.lineWidth = 5\r\n\r\n  ctx.lineTo(STRING_X_ENDING_COORDINATE, string)\r\n  ctx.stroke();\r\n}\r\n\r\nexport const initializeFretboard = (canvasRef, fretboardRef, cb) => {\r\n\r\n  const ctx = canvasRef.current.getContext(\"2d\")\r\n\r\n  const fretboard = new Image()\r\n  fretboardRef.current = fretboard\r\n  fretboard.src = './assets/images/fretboard1.png'\r\n\r\n  fretboard.onload = () => {\r\n    ctx.drawImage(fretboard, 0, 0)\r\n    if (cb)\r\n      cb()\r\n  }\r\n}\r\n\r\nexport const drawScale = (canvasRef, scale, key, showNotes, highlighted, blank, betweenFrets, betweenStrings) => {\r\n  const ctx = canvasRef.current.getContext('2d')\r\n\r\n  // For major scale for instance [2, 2, 1, 2, 2, 2, 1]\r\n  const scaleIntervals = getScaleIntervals(scale)\r\n\r\n  // Gets the notes of the scale\r\n  const notes = getScaleNotes(key, scaleIntervals)\r\n\r\n  // How many halfnotes each note is from the key root\r\n  const halfNotes = getHalfNotes(scaleIntervals, notes)\r\n\r\n\r\n\r\n  // Draw scale\r\n  return draw(ctx, key, halfNotes, notes, showNotes, highlighted, blank, betweenFrets, betweenStrings)\r\n}\r\n\r\n\r\nconst isBetweenFrets = (fret, betweenFrets) => {\r\n  const fretNum = fret.substring(1)\r\n\r\n  if (parseInt(fretNum) < betweenFrets[0] || parseInt(fretNum) > betweenFrets[1])\r\n    return false\r\n\r\n  return true\r\n}\r\n\r\nconst isBetweenStrings = (fret, betweenStrings) => {\r\n  const string = fret.substring(0, 1)\r\n\r\n  if (stringToANumber[string] < betweenStrings[0] || stringToANumber[string] > betweenStrings[1])\r\n    return false\r\n\r\n  return true\r\n}\r\n\r\n\r\nconst draw = (ctx, key, halfNotes, notes, showNotes, highlighted, blank, betweenFrets = [0, 12], betweenStrings = [1, 6]) => {\r\n\r\n  const drawnFrets = []\r\n\r\n  for (const fret in fretboardPoints) {\r\n\r\n    // Don't bother drawing if outside of fret boundaries\r\n    if (!isBetweenFrets(fret, betweenFrets))\r\n      continue\r\n\r\n    if (!isBetweenStrings(fret, betweenStrings))\r\n      continue\r\n\r\n    const note = fretsToNotes[fret]\r\n    const scaleDegree = SCALE_DEGREES[halfNotes[note] - 1]\r\n\r\n    // from all fretboard notes, is this in scale\r\n    if (notes.includes(note)) {\r\n\r\n      drawnFrets.push(fret)\r\n\r\n      // root note?\r\n      if (note === key) {\r\n        if (showNotes)\r\n          drawNote(ctx, fret, note, 'red', 'white')\r\n        else\r\n          drawNote(ctx, fret, 'R', 'red', 'white')\r\n      }\r\n\r\n      else if (blank) {\r\n        drawNote(ctx, fret, '', 'white', 'black')\r\n      }\r\n\r\n      // not root, but 3rd or 5th\r\n      else if (triad.includes(scaleDegree))\r\n        if (showNotes)\r\n          if (highlighted)\r\n            drawNote(ctx, fret, note, 'blue', 'white')\r\n          else\r\n            drawNote(ctx, fret, note)\r\n\r\n        else {\r\n          if (highlighted)\r\n            drawNote(ctx, fret, scaleDegree, 'blue', 'white')\r\n          else\r\n            drawNote(ctx, fret, scaleDegree)\r\n        }\r\n\r\n      // scale notes other than 1, 3 or 5\r\n      else\r\n        if (showNotes)\r\n          if (highlighted)\r\n            drawNote(ctx, fret, note, 'white', 'black')\r\n\r\n          else\r\n            drawNote(ctx, fret, note)\r\n\r\n        else\r\n          if (highlighted)\r\n            drawNote(ctx, fret, scaleDegree, 'white', 'black')\r\n          else\r\n            drawNote(ctx, fret, scaleDegree)\r\n    }\r\n  }\r\n\r\n  return drawnFrets\r\n}\r\n","import {\r\n  E_FRET_HEIGHT,\r\n  A_FRET_HEIGHT,\r\n  D_FRET_HEIGHT,\r\n  G_FRET_HEIGHT,\r\n  B_FRET_HEIGHT,\r\n  e_FRET_HEIGHT\r\n} from './fretboardPoints'\r\n\r\nexport const STRINGS = [\r\n  E_FRET_HEIGHT,\r\n  A_FRET_HEIGHT,\r\n  D_FRET_HEIGHT,\r\n  G_FRET_HEIGHT,\r\n  B_FRET_HEIGHT,\r\n  e_FRET_HEIGHT\r\n]\r\n\r\nexport const LETTER_HEIGHT_CORRECTION = 4\r\nexport const STRING_X_STARTING_COORDINATE = 53\r\nexport const STRING_X_ENDING_COORDINATE = 840","import * as Tone from 'tone'\r\nimport { getRandomScaleNote, getPreviousAndNextPitch } from '../scales/scales';\r\nimport { FRETS_TO_PITCHES } from '../pitches';\r\n\r\nconst synth = new Tone.PluckSynth({\r\n  attackNoise: 1,\r\n  release: 5,\r\n  dampening: 100,\r\n  resonance: 0.99\r\n}).toDestination()\r\n\r\nconst polySynth = new Tone.PolySynth().toDestination()\r\n\r\nexport const playNote = (note, length) => {\r\n\r\n  //const vibrato = new Tone.Vibrato({ depth: 0.1 }).toDestination()\r\n\r\n  synth.triggerAttackRelease(note, length);\r\n}\r\n\r\nexport const playChord = (notes, length) => {\r\n\r\n  polySynth.triggerAttackRelease(notes, length)\r\n}\r\n\r\nexport const playSequenceOfNotes = (frets, timeBetweenNotes) => {\r\n\r\n  //schedule a series of notes, one per second\r\n  const time = Tone.context.currentTime.toFixed(1)\r\n\r\n  let index = 1\r\n  for (const fret of frets) {\r\n    synth.triggerAttackRelease(FRETS_TO_PITCHES[fret], '4n', parseFloat(time) + index * timeBetweenNotes)\r\n    index++\r\n  }\r\n}\r\n\r\n\r\nexport const playRandomNote = (scaleNotes, rootPitch, length) => {\r\n  const note = getRandomScaleNote(scaleNotes)\r\n\r\n  const [lower, higher] = getPreviousAndNextPitch(rootPitch, note)\r\n\r\n  if (Math.random() < 0.5) {\r\n    playNote(lower, length)\r\n    return lower\r\n  }\r\n\r\n  else {\r\n    playNote(higher, length)\r\n    return higher\r\n  }\r\n\r\n\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport { drawBackgroundWithDelay, drawNote, initializeFretboard } from '../../helpers/drawFunctions/drawFunctions'\r\nimport { inWhichFret, onMouseDownCoordinates } from '../../helpers/fretboardHitpoints'\r\nimport { fretsToNotes } from '../../helpers/fretsToNotes'\r\nimport { FRETS_TO_PITCHES } from '../../helpers/pitches'\r\nimport { playNote } from '../../helpers/tone/playFunctions'\r\n\r\n\r\nexport default function Canvas() {\r\n\r\n  const canvasRef = useRef()\r\n  const fretboardRef = useRef()\r\n\r\n  useEffect(() => {\r\n    initializeFretboard(canvasRef, fretboardRef)\r\n  }, [])\r\n\r\n  // const isNote = fret => fretsToNotes[fret]\r\n\r\n  const handleMouseDown = e => {\r\n\r\n    const ctx = canvasRef.current.getContext('2d')\r\n    const [x, y] = onMouseDownCoordinates(e, canvasRef)\r\n    const fret = inWhichFret(x, y)\r\n\r\n    if (fret) {\r\n      playNote(FRETS_TO_PITCHES[fret], '4n')\r\n      drawNote(ctx, fret, fretsToNotes[fret]);\r\n      drawBackgroundWithDelay(ctx, fretboardRef, 500)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={840}\r\n        height={225}\r\n        onMouseDown={handleMouseDown}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","\r\nimport React from 'react'\r\n\r\n\r\nexport default function InfoBar() {\r\n  return (\r\n    <div className=\"container pt-3\">\r\n      <h2 className=\"text-center\">Interval Mastery</h2>\r\n      <p className=\"pl-3 pt-3 pr-3\">\r\n        Find the right note at the right fret. Try to quess as many as you can in 60 seconds.\r\n      </p>\r\n      <p className=\"pl-3 pr-3 pb-3\">\r\n        The string where you need to find a given note is highlighted during a game.\r\n      </p>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Canvas from '../components/intervalMastery/Canvas'\r\nimport InfoBar from '../components/intervalMastery/InfoBar'\r\n\r\nexport default function IntervalMastery() {\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex flex-row justify-content-between\">\r\n        <div>\r\n          <Canvas />\r\n        </div>\r\n        <InfoBar />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useEffect, useRef } from 'react'\r\nimport { drawScale, initializeFretboard } from '../../helpers/drawFunctions/drawFunctions'\r\nimport { ScalesContext } from '../../pages/ScalesMastery'\r\n\r\n\r\n\r\nexport default function Canvas() {\r\n\r\n\r\n  const [state] = useContext(ScalesContext)\r\n\r\n  const canvasRef = useRef()\r\n  const fretboardRef = useRef()\r\n\r\n  useEffect(() => {\r\n    initializeFretboard(canvasRef, fretboardRef, () => drawScale(canvasRef, state.scale, state.key, state.showNotes, state.highlighted, false, state.betweenFrets, state.betweenStrings))\r\n  }, [state.key, state.scale, state.showNotes, state.highlighted, state.betweenFrets, state.betweenStrings])\r\n\r\n  // const isNote = fret => fretsToNotes[fret]\r\n\r\n  // const handleMouseDown = e => {\r\n\r\n  //   const ctx = canvasRef.current.getContext('2d')\r\n  //   const [x, y] = onMouseDownCoordinates(e, canvasRef)\r\n  //   const fret = inWhichFret(x, y)\r\n\r\n  //   if (fret) {\r\n  //     playNote(FRETS_TO_PITCHES[fret], '4n')\r\n  //     drawNote(ctx, fretboardPoints[fret].x, fretboardPoints[fret].y, fretsToNotes[fret]);\r\n  //     drawBackgroundWithDelay(ctx, fretboardRef, 500)\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={840}\r\n        height={225}\r\n      // onMouseDown={handleMouseDown}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","\r\nimport React, { useContext } from 'react'\r\nimport Switch from 'react-switch'\r\n\r\nimport { ScalesContext } from '../../pages/ScalesMastery'\r\n\r\n\r\nexport default function InfoBar() {\r\n\r\n  const [state, dispatch] = useContext(ScalesContext)\r\n\r\n  const handleChange = checked => {\r\n    dispatch({ type: 'TOGGLE_BETWEEN_NOTES_AND_INTERVALS', payload: checked })\r\n  }\r\n\r\n  const handleHighlighted = checked => {\r\n    dispatch({ type: 'HIGHLIGHT', payload: checked })\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container pt-3\">\r\n      <h2 className=\"text-center\">Scales Mastery</h2>\r\n      <p className=\"pl-3 pt-2 pr-3\">\r\n        Scale is an ordered sequence of notes.\r\n        Once you have chosen a scale of your choice, you can toggle between notes and scale degrees.\r\n        Letter (R) represents the root of the scale.\r\n      </p>\r\n      <div className=\"pl-3 pr-3 pb-2\">\r\n        <label className=\"d-flex flex-row\">\r\n          <span className=\"mr-3 font-weight-bolder\">Scale Degrees</span>\r\n          <Switch\r\n            onChange={handleChange}\r\n            checked={state.showNotes}\r\n            checkedIcon={false}\r\n            uncheckedIcon={false}\r\n            className=\"align-self-end\"\r\n          />\r\n          <span className=\"ml-3 font-weight-bolder\">Notes</span>\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"pl-3 pr-3 pb-3\">\r\n        If you wish to see which notes make up a triad chord, you can able highlighted mode below.\r\n        Root is colored red and 3rd's and 5th's are blue. Can you see familiar chord shapes (C, A, G, E, D)?\r\n        \r\n      </div>\r\n\r\n      <div className=\"pl-3 pr-3 pb-2\">\r\n        <label className=\"d-flex flex-row\">\r\n          <span className=\"mr-3 font-weight-bolder\">Normal View</span>\r\n          <Switch\r\n            onChange={handleHighlighted}\r\n            checked={state.highlighted}\r\n            checkedIcon={false}\r\n            uncheckedIcon={false}\r\n            className=\"align-self-end\"\r\n          />\r\n          <span className=\"ml-3 font-weight-bolder\">Highlighted</span>\r\n\r\n        </label>\r\n        </div>\r\n        <div className=\"pl-3 pr-3\">\r\n          \r\n          You can isolate a part of the fretboard adjusting the sliders below and right of the fretboard.\r\n\r\n        \r\n        </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Button({ children, handleClick, active, width }) {\r\n  return (\r\n    <button className={`btn ${active ? 'btn-primary' : 'btn-secondary'} m-2`} style={{ width }} onClick={handleClick}>\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { ScalesContext } from '../../pages/ScalesMastery';\r\nimport Button from '../Button';\r\n\r\n\r\n\r\nexport default function ScaleSelects() {\r\n\r\n  const [state, dispatch] = useContext(ScalesContext)\r\n\r\n  const handleClick = key => {\r\n    dispatch({ type: 'SET_KEY', payload: key })\r\n  }\r\n\r\n  const handleScaleChange = scale => {\r\n    dispatch({ type: 'SET_SCALE', payload: scale })\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container d-flex flex-row justify-content-around\">\r\n\r\n      <div >\r\n        <h5 className=\"text-center font-weight-bolder\">KEY</h5>\r\n        <div className=\"row\">\r\n          <Button className=\"col\" width=\"70px\" active={state.key === 'C'} handleClick={() => handleClick('C')}>C</Button>\r\n          <Button className=\"col\" width=\"70px\" active={state.key === 'C#'} handleClick={() => handleClick('C#')}>C#</Button>\r\n          <Button className=\"col\" width=\"70px\" active={state.key === 'D'} handleClick={() => handleClick('D')}>D</Button>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <Button className=\"col\" width=\"70px\" active={state.key === 'D#'} handleClick={() => handleClick('D#')}>D#</Button>\r\n          <Button className=\"col\" width=\"70px\" active={state.key === 'E'} handleClick={() => handleClick('E')}>E</Button>\r\n          <Button className=\"col\" width=\"70px\" active={state.key === 'F'} handleClick={() => handleClick('F')}>F</Button>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <Button className=\"col\" width=\"70px\" active={state.key === 'F#'} handleClick={() => handleClick('F#')}>F#</Button>\r\n          <Button className=\"col\" width=\"70px\" active={state.key === 'G'} handleClick={() => handleClick('G')}>G</Button>\r\n          <Button className=\"col\" width=\"70px\" active={state.key === 'G#'} handleClick={() => handleClick('G#')}>G#</Button>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <Button className=\"col\" width=\"70px\" active={state.key === 'A'} handleClick={() => handleClick('A')}>A</Button>\r\n          <Button className=\"col\" width=\"70px\" active={state.key === 'A#'} handleClick={() => handleClick('A#')}>A#</Button>\r\n          <Button className=\"col\" width=\"70px\" active={state.key === 'B'} handleClick={() => handleClick('B')}>B</Button>\r\n        </div>\r\n      </div>\r\n\r\n      <div >\r\n        <h5 className=\"text-center font-weight-bolder\">SCALE</h5>\r\n        <div className=\"row\">\r\n          <Button className=\"col\" active={state.scale === 'major scale'} handleClick={() => handleScaleChange('major scale')}>Major</Button>\r\n          <Button className=\"col\" active={state.scale === 'minor scale'} handleClick={() => handleScaleChange('minor scale')}>Minor</Button>\r\n          <Button className=\"col\" active={state.scale === 'major pentatonic'} handleClick={() => handleScaleChange('major pentatonic')}>Maj Pentatonic</Button>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Button className=\"col\" active={state.scale === 'minor pentatonic'} handleClick={() => handleScaleChange('minor pentatonic')}>Min Pentatonic</Button>\r\n          <Button className=\"col\" active={state.scale === 'dorian'} handleClick={() => handleScaleChange('dorian')}>Dorian</Button>\r\n          <Button className=\"col\" active={state.scale === 'phrygian'} handleClick={() => handleScaleChange('phrygian')}>Phrygian</Button>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Button className=\"col\" active={state.scale === 'lydian'} handleClick={() => handleScaleChange('lydian')}>Lydian</Button>\r\n          <Button className=\"col\" active={state.scale === 'mixolydian'} handleClick={() => handleScaleChange('mixolydian')}>Mixolydian</Button>\r\n          <Button className=\"col\" active={state.scale === 'locrian'} handleClick={() => handleScaleChange('locrian')}>Locrian</Button>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Button className=\"col\" active={state.scale === 'major blues'} handleClick={() => handleScaleChange('major blues')}>Blues Major</Button>\r\n          <Button className=\"col\" active={state.scale === 'minor blues'} handleClick={() => handleScaleChange('minor blues')}>Blues Minor</Button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React, { useReducer, createContext } from 'react'\r\nimport Canvas from '../components/scalesMastery/Canvas'\r\nimport InfoBar from '../components/scalesMastery/InfoBar'\r\nimport ScaleSelects from '../components/scalesMastery/ScaleSelects'\r\nimport { Slider } from \"shards-react\";\r\n\r\nconst initialState = {\r\n  scale: 'minor blues',\r\n  key: 'A',\r\n  showNotes: false,\r\n  highlighted: false,\r\n  betweenFrets: [0, 12],\r\n  betweenStrings: [1, 6]\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_KEY':\r\n      return {\r\n        ...state,\r\n        key: action.payload\r\n      }\r\n\r\n    case 'SET_SCALE':\r\n      return {\r\n        ...state,\r\n        scale: action.payload\r\n      }\r\n\r\n    case 'TOGGLE_BETWEEN_NOTES_AND_INTERVALS':\r\n      return {\r\n        ...state,\r\n        showNotes: action.payload\r\n      }\r\n    case 'HIGHLIGHT':\r\n      return {\r\n        ...state,\r\n        highlighted: action.payload\r\n      }\r\n\r\n    case 'SET_BETWEEN_FRETS':\r\n      return {\r\n        ...state,\r\n        betweenFrets: action.payload\r\n      }\r\n\r\n    case 'SET_BETWEEN_STRINGS':\r\n      return {\r\n        ...state,\r\n        betweenStrings: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const ScalesContext = createContext()\r\n\r\nexport default function ScalesMastery() {\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  const handleFretSlide = e => {\r\n    const start = parseInt(e[0])\r\n    const end = parseInt(e[1])\r\n\r\n    dispatch({ type: 'SET_BETWEEN_FRETS', payload: [start, end] })\r\n  }\r\n\r\n  const handleStringSlide = e => {\r\n\r\n    const start = parseInt(e[0])\r\n    const end = parseInt(e[1])\r\n\r\n    dispatch({ type: 'SET_BETWEEN_STRINGS', payload: [start, end] })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ScalesContext.Provider value={[state, dispatch]}>\r\n\r\n        <div className=\"d-flex flex-row justify-content-between\">\r\n          <div>\r\n            <div className=\"d-flex flex-column\">\r\n              <div className=\"d-flex flex-row\">\r\n                <Canvas />\r\n                <Slider\r\n\r\n                  className=\"ml-4 mb-5\"\r\n                  connect\r\n                  onSlide={handleStringSlide}\r\n                  start={state.betweenStrings}\r\n                  range={{ min: 1, max: 6 }}\r\n                  orientation=\"vertical\"\r\n                />\r\n              </div>\r\n              <Slider\r\n                className=\"mt-0 ml-4 mr-5 mb-4\"\r\n                connect\r\n                onSlide={handleFretSlide}\r\n                start={state.betweenFrets}\r\n                range={{ min: 0, max: 12 }}\r\n              />\r\n            </div>\r\n            <ScaleSelects />\r\n          </div>\r\n          <InfoBar />\r\n        </div>\r\n\r\n      </ScalesContext.Provider>\r\n    </div>\r\n  )\r\n}\r\n","import { fretsToNotes } from './fretsToNotes'\r\nimport { scaleDegreeFromANote } from './scales/scales'\r\n\r\n\r\nexport const fretsToNearestRoot = (key, degree, fret, fretsDrawn) => {\r\n  const degreeNumber = degree.length === 1 ? parseInt(degree) : parseInt(degree.substring(1))\r\n\r\n  const frets = []\r\n  const index = fretsDrawn.findIndex(f => f === fret)\r\n\r\n  let duplicates = 0\r\n  let previousDegree\r\n  let currentDegree\r\n\r\n  if (degreeNumber <= 4) {\r\n    // Let's go to the root 4, 3, 2, 1\r\n\r\n    for (let i = 0; i < degreeNumber + duplicates; i++) {\r\n\r\n      if (index - i < 0)\r\n        break\r\n\r\n      currentDegree = scaleDegreeFromANote(key, fretsToNotes[fretsDrawn[index - i]])\r\n      currentDegree = currentDegree.length === 1 ? parseInt(currentDegree) : parseInt(currentDegree.substring(1))\r\n\r\n      if (i > 0 && currentDegree >= previousDegree) {\r\n        duplicates++\r\n        continue\r\n      }\r\n\r\n      frets.push(fretsDrawn[index - i])\r\n\r\n      previousDegree = currentDegree\r\n    }\r\n  }\r\n\r\n  else {\r\n    // 5, 6, 7, 1\r\n\r\n    for (let i = 0; i <= 8 - degreeNumber + duplicates; i++) {\r\n\r\n      if (index + i > fretsDrawn.length - 1)\r\n        break\r\n\r\n      currentDegree = scaleDegreeFromANote(key, fretsToNotes[fretsDrawn[index + i]])\r\n      currentDegree = currentDegree.length === 1 ? parseInt(currentDegree) : parseInt(currentDegree.substring(1))\r\n\r\n\r\n      if (i > 0 && currentDegree <= previousDegree && !(currentDegree === 0 && previousDegree === 7)) {\r\n        duplicates++\r\n        continue\r\n      }\r\n\r\n      frets.push(fretsDrawn[index + i])\r\n\r\n      previousDegree = currentDegree\r\n\r\n    }\r\n  }\r\n\r\n  return frets\r\n}","import React, { useContext, useEffect, useRef } from 'react'\r\nimport { drawNote, drawSequenceOfFrets, initializeFretboard } from '../../helpers/drawFunctions/drawFunctions'\r\nimport { inWhichFret, onMouseDownCoordinates } from '../../helpers/fretboardHitpoints'\r\nimport { fretsToNotes } from '../../helpers/fretsToNotes'\r\nimport { FRETS_TO_PITCHES } from '../../helpers/pitches'\r\nimport { scaleDegreeFromANote } from '../../helpers/scales/scales'\r\nimport { playNote, playSequenceOfNotes } from '../../helpers/tone/playFunctions'\r\nimport { EarTrainingCtx } from '../../pages/EarTraining'\r\nimport { fretsToNearestRoot } from '../../helpers/fretsToNearestRoot'\r\n\r\n\r\nexport default function Canvas({ setRef }) {\r\n\r\n  const canvasRef = useRef()\r\n  const fretboardRef = useRef()\r\n\r\n  const [state, dispatch] = useContext(EarTrainingCtx)\r\n\r\n  useEffect(() => {\r\n    initializeFretboard(canvasRef, fretboardRef)\r\n    setRef(canvasRef.current, fretboardRef.current)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  // const isNote = fret => fretsToNotes[fret]\r\n\r\n  const handleMouseDown = e => {\r\n\r\n    const ctx = canvasRef.current.getContext('2d')\r\n    const [x, y] = onMouseDownCoordinates(e, canvasRef)\r\n    const fret = inWhichFret(x, y)\r\n    dispatch({ type: 'SET_PUSHED_FRET', payload: fret })\r\n\r\n\r\n    if (fret) {\r\n\r\n      const match = answerIsAMatch(fret, state.randomFret)\r\n\r\n      if (!match)\r\n        playNote(FRETS_TO_PITCHES[fret], '4n')\r\n\r\n      else {\r\n        dispatch({ type: 'ADD_POINT' })\r\n        const scaleDegree = scaleDegreeFromANote(state.key, fretsToNotes[fret])\r\n\r\n        if (scaleDegree === '0' || state.scale === 'chromatic scale')\r\n          playNote(FRETS_TO_PITCHES[fret], '4n')\r\n\r\n        drawNote(ctx, fret, scaleDegree !== '0' ? scaleDegree : 'R', 'blue', 'white');\r\n\r\n        if (state.scale !== 'chromatic scale') {\r\n          const frets = fretsToNearestRoot(state.key, scaleDegree, fret, state.fretsDrawn)\r\n\r\n          setTimeout(() => {\r\n            playSequenceOfNotes(frets, 0.5)\r\n            drawSequenceOfFrets(ctx, state.key, frets, 500)\r\n          }, 0)\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n  const answerIsAMatch = (pushedFret, randomFret) => {\r\n    return FRETS_TO_PITCHES[pushedFret] === FRETS_TO_PITCHES[randomFret]\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={840}\r\n        height={225}\r\n        onMouseDown={handleMouseDown}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","\r\nimport React, { useContext } from 'react'\r\nimport { FormSelect } from 'shards-react'\r\nimport { EarTrainingCtx } from '../../pages/EarTraining'\r\n\r\n\r\nexport default function InfoBar() {\r\n\r\n  const [state, dispatch] = useContext(EarTrainingCtx)\r\n\r\n  const handleChange = event => {\r\n\r\n    dispatch({ type: 'SET_SCALE', payload: event.target.value })\r\n    document.activeElement.blur()\r\n  }\r\n\r\n  return (\r\n    <div className=\"container pt-3\">\r\n      <h2 className=\"text-center\">Ear Training</h2>\r\n      <p className=\"pl-3 pt-2 pr-3\">\r\n        You'll hear a triad and after that a random scale note. The idea is to guess the right scale degree of a given scale (choose below). You can do that the easier way by\r\n        pressing the numbers below the fretboard, or if you want a bigger challenge,\r\n        try to find the scale degree directly on the fretboard.\r\n      </p>\r\n\r\n      <div className=\"pl-3 pr-3 pb-2\">\r\n        <FormSelect onChange={handleChange}>\r\n          <option defaultValue={state.scale === 'major scale'} value=\"major scale\">Major Scale</option>\r\n          <option defaultValue={state.scale === 'minor scale'} value=\"minor scale\">Minor Scale</option>\r\n          <option defaultValue={state.scale === 'chromatic scale'} value=\"chromatic scale\">Chromatic Scale</option>\r\n        </FormSelect>\r\n      </div>\r\n      <p className=\"pl-3 pt-2 pr-3\">\r\n        When you make a right guess, hear and see (...with major and minor scales) how the scale degrees are played\r\n        up (degrees: 5, 6, 7, R) or down (degrees: 4, 3, 2, R) to the nearest tonic (R). Try to sing along. Ideally you want to be\r\n        able to sing the notes in your head before making a guess.\r\n      </p>\r\n      <p className=\"pl-3 pr-3 pb-3\">\r\n        Press <kbd>spacebar</kbd> to start a new round.\r\n    </p>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { drawSequenceOfFrets, drawNote } from '../../helpers/drawFunctions/drawFunctions'\r\nimport { fretsToNearestRoot } from '../../helpers/fretsToNearestRoot'\r\nimport { playSequenceOfNotes } from '../../helpers/tone/playFunctions'\r\nimport { EarTrainingCtx } from '../../pages/EarTraining'\r\nimport Button from '../Button'\r\nimport { scaleDegreeFromANote } from '../../helpers/scales/scales'\r\nimport { fretsToNotes } from '../../helpers/fretsToNotes'\r\n\r\n\r\nexport default function ScaleDegrees({ canvasRef, fretboardRef }) {\r\n\r\n  const [state, dispatch] = useContext(EarTrainingCtx)\r\n\r\n  const handleClick = value => {\r\n\r\n    if (!state.note)\r\n      return\r\n\r\n    const ctx = canvasRef.current.getContext('2d')\r\n    //const quessedNote = state.scaleNotes[value]\r\n\r\n    let scaleDegree = scaleDegreeFromANote(state.key, fretsToNotes[state.randomFret])\r\n\r\n    if (state.scale !== 'chromatic scale') {\r\n      scaleDegree = scaleDegree.length === 1 ? scaleDegree : scaleDegree.substring(1)\r\n    }\r\n\r\n    if (scaleDegree === value.toString()) {\r\n\r\n      drawNote(ctx, state.randomFret, scaleDegree !== '0' ? scaleDegree : 'R', 'blue', 'white');\r\n      dispatch({ type: 'SET_PUSHED_FRET', payload: state.randomFret })\r\n\r\n      if (state.scale !== 'chromatic scale') {\r\n\r\n        const frets = fretsToNearestRoot(state.key, scaleDegree, state.randomFret, state.fretsDrawn)\r\n\r\n        setTimeout(() => {\r\n\r\n          playSequenceOfNotes(frets, 0.5)\r\n          drawSequenceOfFrets(ctx, state.key, frets, 500)\r\n        }, 0)\r\n      }\r\n\r\n    }\r\n\r\n    // Let's make sure that the state is changed for Judgement\r\n    else\r\n      dispatch({ type: 'SET_PUSHED_FRET', payload: `${Math.random()}` })\r\n\r\n\r\n    document.activeElement.blur()\r\n  }\r\n\r\n  return (\r\n    <div className=\"container d-flex flex-row justify-content-around mb-3\">\r\n\r\n      <div >\r\n        <h5 className=\"text-center font-weight-bolder\">SCALE DEGREES</h5>\r\n        <div className=\"row\">\r\n          <Button className=\"col\" width=\"100px\" active={false} handleClick={() => handleClick(0)}>1</Button>\r\n          <Button className=\"col\" width=\"100px\" active={false} handleClick={() => handleClick(2)}>2</Button>\r\n          <Button className=\"col\" width=\"100px\" active={false} handleClick={() => handleClick(3)}>3</Button>\r\n          <Button className=\"col\" width=\"100px\" active={false} handleClick={() => handleClick(4)}>4</Button>\r\n          <Button className=\"col\" width=\"100px\" active={false} handleClick={() => handleClick(5)}>5</Button>\r\n          <Button className=\"col\" width=\"100px\" active={false} handleClick={() => handleClick(6)}>6</Button>\r\n          <Button className=\"col\" width=\"100px\" active={false} handleClick={() => handleClick(7)}>7</Button>\r\n        </div>\r\n        <div className={`row ${state.scale === 'chromatic scale' ? 'visible' : 'invisible'}`} style={{ paddingLeft: '58px' }}>\r\n          <Button className=\"col\" width=\"100px\" active={false} handleClick={() => handleClick('b2')}>b2</Button>\r\n          <Button className=\"col\" width=\"100px\" active={false} handleClick={() => handleClick('b3')}>b3</Button>\r\n          <button className={`btn m-2`} style={{ width: '100px', cursor: 'default' }} disabled></button>\r\n          <Button className=\"col\" width=\"100px\" active={false} handleClick={() => handleClick('b5')}>b5</Button>\r\n          <Button className=\"col\" width=\"100px\" active={false} handleClick={() => handleClick('b6')}>b6</Button>\r\n          <Button className=\"col\" width=\"100px\" active={false} handleClick={() => handleClick('b7')}>b7</Button>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Judgement({ answerWasCorrect, ...otherProps }) {\r\n\r\n  const correctAnswer = () => (\r\n    <h3 {...otherProps} >Correct!</h3>\r\n  )\r\n\r\n  const wrongAnswer = () => (\r\n    <h3 {...otherProps} >Wrong!</h3>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {answerWasCorrect ? correctAnswer() : wrongAnswer()}\r\n    </div>\r\n  )\r\n}\r\n","export const initialState = {\r\n  scale: 'major scale',\r\n  frets: ['E5', 'A5', 'D5', 'G5', 'B5'],\r\n  key: '',\r\n  scaleNotes: [],\r\n  note: '',\r\n  fretsDrawn: [],\r\n  pushedFret: '',\r\n  randomFret: '',\r\n  points: 0,\r\n  betweenFrets: [4, 8],\r\n  disableRestart: false\r\n}\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_SCALE':\r\n      return {\r\n        ...state,\r\n        scale: action.payload\r\n      }\r\n    case 'SET_KEY':\r\n      return {\r\n        ...state,\r\n        key: action.payload\r\n      }\r\n    case 'SET_SCALE_NOTES':\r\n      return {\r\n        ...state,\r\n        scaleNotes: action.payload\r\n      }\r\n\r\n    case 'SET_NOTE':\r\n      return {\r\n        ...state,\r\n        note: action.payload\r\n      }\r\n\r\n    case 'SET_FRETS_DRAWN':\r\n      return {\r\n        ...state,\r\n        fretsDrawn: action.payload\r\n      }\r\n\r\n    case 'SET_PUSHED_FRET':\r\n      return {\r\n        ...state,\r\n        pushedFret: action.payload\r\n      }\r\n\r\n    case 'ADD_POINT':\r\n      return {\r\n        ...state,\r\n        points: state.points + 1\r\n      }\r\n\r\n    case 'SET_RANDOM_FRET':\r\n      return {\r\n        ...state,\r\n        randomFret: action.payload\r\n      }\r\n    case 'SET_BETWEEN_FRETS':\r\n      return {\r\n        ...state,\r\n        betweenFrets: action.payload\r\n      }\r\n    case 'SET_DISABLE_RESTART':\r\n      return {\r\n        ...state,\r\n        disableRestart: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import React, { createContext, useEffect, useReducer, useRef, useState } from 'react'\r\nimport Canvas from '../components/earTraining/Canvas'\r\nimport InfoBar from '../components/earTraining/InfoBar'\r\nimport ScaleDegrees from '../components/earTraining/ScaleDegrees'\r\nimport { drawScale } from '../helpers/drawFunctions/drawFunctions'\r\nimport { fretsToNotes } from '../helpers/fretsToNotes'\r\nimport { FRETS_TO_PITCHES } from '../helpers/pitches'\r\nimport { getScaleIntervals, getScaleNotes, triadPitchesFromRoot } from '../helpers/scales/scales'\r\nimport { playChord, playNote } from '../helpers/tone/playFunctions'\r\nimport { Slider } from \"shards-react\";\r\nimport Judgement from '../components/earTraining/Judgement'\r\n\r\nimport { reducer, initialState } from '../components/earTraining/state/reducer'\r\n\r\nexport const EarTrainingCtx = createContext()\r\n\r\nexport default function IntervalMastery() {\r\n\r\n  const canvasRef = useRef()\r\n  const fretboardRef = useRef()\r\n  const stateRef = useRef()\r\n  const trackFirstRenderRef = useRef(true)\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  const [quessMade, setQuessMade] = useState(false)\r\n  const [disableRestart, setDisableRestart] = useState(false)\r\n\r\n  const restartRef = useRef(false)\r\n\r\n  const setRef = (cRef, fRef) => {\r\n    canvasRef.current = cRef\r\n    fretboardRef.current = fRef\r\n  }\r\n\r\n  useEffect(() => {\r\n    stateRef.current = state\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state.scale, state.betweenFrets])\r\n\r\n  useEffect(() => {\r\n\r\n    if (!trackFirstRenderRef.current) {\r\n      setQuessMade(true)\r\n\r\n      setTimeout(() => {\r\n        setQuessMade(false)\r\n      }, 1000)\r\n    }\r\n\r\n    else\r\n      trackFirstRenderRef.current = false\r\n\r\n  }, [state.pushedFret])\r\n\r\n  useEffect(() => {\r\n    restartRef.current = disableRestart\r\n  }, [disableRestart])\r\n\r\n  useEffect(() => {\r\n    const handleKeyup = e => {\r\n      if (e.keyCode === 32 && !restartRef.current) {\r\n\r\n        dispatch({ type: 'SET_DISABLE_RESTART', payload: true })\r\n        setDisableRestart(true)\r\n        const rootFret = state.frets[Math.floor(Math.random() * state.frets.length)]\r\n        dispatch({ type: 'SET_KEY', payload: fretsToNotes[rootFret] })\r\n        const rootPitch = FRETS_TO_PITCHES[rootFret]\r\n        const rootNote = rootPitch.substring(0, 1)\r\n\r\n        const intervals = getScaleIntervals(stateRef.current.scale)\r\n        const notes = getScaleNotes(rootNote, intervals)\r\n        dispatch({ type: 'SET_SCALE_NOTES', payload: notes })\r\n\r\n        if (stateRef.current.scale !== 'chromatic scale') {\r\n          const triadPitches = triadPitchesFromRoot(rootPitch, notes)\r\n          playChord(triadPitches, '4n')\r\n        }\r\n\r\n        else {\r\n          playNote(rootPitch, '4n')\r\n        }\r\n\r\n        canvasRef.current.getContext('2d').drawImage(fretboardRef.current, 0, 0)\r\n        const fretsDrawn = drawScale(canvasRef, stateRef.current.scale, rootNote, false, false, true, stateRef.current.betweenFrets)\r\n        const randomFret = getRandomFret(fretsDrawn)\r\n        const randomNote = fretsToNotes[randomFret]\r\n\r\n        dispatch({ type: 'SET_RANDOM_FRET', payload: randomFret })\r\n        dispatch({ type: 'SET_NOTE', payload: randomNote })\r\n        dispatch({ type: 'SET_FRETS_DRAWN', payload: fretsDrawn })\r\n\r\n\r\n        setTimeout(() => {\r\n          playNote(FRETS_TO_PITCHES[randomFret], '4n')\r\n          dispatch({ type: 'SET_DISABLE_RESTART', payload: false })\r\n          setDisableRestart(false)\r\n        }, 1300)\r\n      }\r\n    }\r\n\r\n    document.addEventListener('keyup', handleKeyup)\r\n\r\n    return () => {\r\n      document.removeEventListener('keyup', handleKeyup)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const getRandomFret = frets => {\r\n    return frets[Math.floor(Math.random() * frets.length - 1)]\r\n  }\r\n\r\n  const handleFretSlide = e => {\r\n    const start = parseInt(e[0])\r\n    const end = parseInt(e[1])\r\n\r\n    dispatch({ type: 'SET_BETWEEN_FRETS', payload: [start, end] })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <EarTrainingCtx.Provider value={[state, dispatch]}>\r\n        <div className=\"d-flex flex-row justify-content-between\">\r\n          <div>\r\n            <div className=\"d-flex flex-column pb-5\">\r\n              <div className=\"d-flex flex-column pb-5\">\r\n                <Canvas setRef={setRef} />\r\n                <Slider\r\n                  className=\"mt-0 ml-4 mr-5 mb-4\"\r\n                  pips={{\r\n                    mode: 'values',\r\n                    values: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\r\n                    density: 12,\r\n                    stepped: true\r\n                  }}\r\n                  connect\r\n                  onSlide={handleFretSlide}\r\n                  start={state.betweenFrets}\r\n                  range={{ min: 0, max: 12 }}\r\n                />\r\n              </div>\r\n              <ScaleDegrees canvasRef={canvasRef} fretboardRef={fretboardRef} />\r\n              {\r\n                quessMade &&\r\n                <Judgement\r\n                  className=\"w-50 m-auto rounded text-center bg-dark p-1 text-warning\"\r\n                  answerWasCorrect={state.randomFret === state.pushedFret}\r\n                />\r\n              }\r\n            </div>\r\n          </div>\r\n          <InfoBar />\r\n        </div>\r\n      </EarTrainingCtx.Provider>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport * as Tone from 'tone'\r\nimport { drawBackgroundWithDelay, drawNote, initializeFretboard } from '../../helpers/drawFunctions/drawFunctions'\r\nimport { inWhichFret, onMouseDownCoordinates } from '../../helpers/fretboardHitpoints'\r\nimport { fretsToNotes } from '../../helpers/fretsToNotes'\r\nimport { FRETS_TO_PITCHES } from '../../helpers/pitches'\r\nimport { playNote } from '../../helpers/tone/playFunctions'\r\n\r\n\r\n\r\nexport default function Canvas() {\r\n\r\n  const canvasRef = useRef()\r\n  const fretboardRef = useRef()\r\n\r\n  useEffect(() => {\r\n    initializeFretboard(canvasRef, fretboardRef, initializeMic)\r\n  }, [])\r\n\r\n\r\n  const initializeMic = () => {\r\n\r\n    const analyser = new Tone.Analyser('waveform')\r\n    const mic = new Tone.UserMedia().connect(analyser);\r\n    mic.open().then(() => {\r\n      // promise resolves when input is available\r\n      console.log(\"mic ope\");\r\n      // print the incoming mic levels in decibels\r\n      //setInterval(() => console.log(gain.toFrequency('4n')), 100);\r\n      console.log(analyser.getValue())\r\n    }).catch(e => {\r\n      // promise is rejected when the user doesn't have or allow mic access\r\n      console.log(\"mic not open\");\r\n    });\r\n  }\r\n\r\n  const handleMouseDown = e => {\r\n\r\n    const ctx = canvasRef.current.getContext('2d')\r\n    const [x, y] = onMouseDownCoordinates(e, canvasRef)\r\n    const fret = inWhichFret(x, y)\r\n\r\n    if (fret) {\r\n      playNote(FRETS_TO_PITCHES[fret], '4n')\r\n      drawNote(ctx, fret, fretsToNotes[fret]);\r\n      drawBackgroundWithDelay(ctx, fretboardRef, 500)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={840}\r\n        height={225}\r\n        onMouseDown={handleMouseDown}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","\r\nimport React from 'react'\r\n\r\n\r\nexport default function InfoBar() {\r\n  return (\r\n    <div className=\"container pt-3\">\r\n      <h2 className=\"text-center\">CAGED</h2>\r\n      <p className=\"pl-3 pt-3 pr-3\">\r\n        Find the right note at the right fret. Try to quess as many as you can in 60 seconds.\r\n      </p>\r\n      <p className=\"pl-3 pr-3 pb-3\">\r\n        The string where you need to find a given note is highlighted during a game.\r\n      </p>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Canvas from '../components/caged/Canvas'\r\nimport InfoBar from '../components/caged/InfoBar'\r\n\r\nexport default function IntervalMastery() {\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex flex-row justify-content-between\">\r\n        <div>\r\n          <Canvas />\r\n        </div>\r\n        <InfoBar />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nexport default withRouter(function NavBar({ location }) {\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className={`nav-item ${location.pathname === '/' && 'active'}`}>\r\n            <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className={`nav-item ${location.pathname === '/Fretboard-Mastery' && 'active'}`}>\r\n            <Link className=\"nav-link\" to=\"Fretboard-Mastery\">Fretboard</Link>\r\n          </li>\r\n          <li className={`nav-item ${location.pathname === '/Scales-Mastery' && 'active'}`}>\r\n            <Link className=\"nav-link\" to=\"Scales-Mastery\">Scales</Link>\r\n          </li>\r\n          <li className={`nav-item ${location.pathname === '/Ear-Training' && 'active'}`}>\r\n            <Link className=\"nav-link\" to=\"Ear-Training\">Ear Training</Link>\r\n          </li>\r\n          {/* <li className={`nav-item ${location.pathname === '/Caged' && 'active'}`}>\r\n            <Link className=\"nav-link\" to=\"Caged\">Caged</Link>\r\n          </li>\r\n          <li className={`nav-item ${location.pathname === '/Interval-Mastery' && 'active'}`}>\r\n            <Link className=\"nav-link\" to=\"Interval-Mastery\">Interval</Link>\r\n          </li> */}\r\n\r\n        </ul>\r\n      </nav>\r\n\r\n    </div>\r\n  )\r\n})\r\n","import React from 'react'\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"w-100\">\r\n      <div className=\"d-flex flex-row justify-content-center bg-dark w-100\">\r\n        <img src=\"./assets/images/key.png\" alt=\"guitar\" height=\"120\" />\r\n        <div className=\"d-flex flex-column\">\r\n          <img src=\"./assets/images/title.png\" className=\"text-right mb-3 p-3 text-white\" alt=\"title\" />\r\n          <div className=\"text-muted position-absolute animated bounce infinite\" style={{ top: '150px', left: '500px', textDecoration: 'underline' }}>\r\n            Take your playing to the next level</div>\r\n        </div>\r\n        <img src=\"./assets/images/key1.png\" alt=\"guitar\" height=\"120\" />\r\n      </div>\r\n      <div className=\"d-flex flex-row justify-content-around container\">\r\n        <div className=\"m-5 w-25\">\r\n          <h3>About Us</h3>\r\n          <p className=\"\">This page is dedicated to help guitarists to learn more about their instrument:\r\n            notes, fretboard, intervals, scales etc.</p>\r\n          <p>\r\n            Browse through and see if there's something that meets your particular needs.\r\n          </p>\r\n        </div>\r\n        <div className=\"m-5 w-50 d-flex flex-row align-self-center\">\r\n          <img src=\"./assets/images/yoda.png\" alt=\"happy customer\" height=\"120\" />\r\n          <div>\r\n            <q><i>This page with it's explicit content has given me so much through the years... LOL, that\r\n            funny came out.</i></q>\r\n            <div className=\"text-right\">\r\n              <i>David B. Hernandez</i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className=\"navbar bg-dark navbar-dark d-flex flex-row align-items-end\">\r\n      <p className=\"text-muted w-50 text-center pt-2\">Copyright © 2020 Unreal Funreel</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport FretboardMastery from './pages/FretboardMastery'\nimport IntervalMastery from './pages/IntervalMastery'\nimport ScalesMastery from './pages/ScalesMastery'\nimport EarTraining from './pages/EarTraining'\nimport Caged from './pages/Caged'\nimport NavBar from './components/NavBar'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Home from './pages/Home';\nimport Footer from './components/Footer';\n\n\nfunction App() {\n\n  return (\n    <div>\n      <Router>\n        <NavBar />\n        <Route path=\"/Fretboard-Mastery\" component={FretboardMastery} />\n        <Route path=\"/Interval-Mastery\" component={IntervalMastery} />\n        <Route path=\"/Scales-Mastery\" component={ScalesMastery} />\n        <Route path=\"/Ear-Training\" component={EarTraining} />\n        <Route path=\"/Caged\" component={Caged} />\n        <Route exact path=\"/guitar/\" component={Home} />\n      </Router>\n      <div className=\"fixed-bottom\">\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"shards-ui/dist/css/shards.min.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}